[
  {
    "name": "AddRoleToDBCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "AddRoleToDBInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "AddSourceIdentifierToSubscription",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "es"
    ],
    "supportedResources": [
      {
        "Name": "es",
        "ARN": "arn:aws:rds:${Region}:${Account}:es:${SubscriptionName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:es-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:es-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "AddTagsToResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "es",
        "ARN": "arn:aws:rds:${Region}:${Account}:es:${SubscriptionName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:es-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:es-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cluster-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-endpoint:${DbClusterEndpoint}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": false
      },
      {
        "Name": "proxy",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy:${DbProxyId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:snapshot:${SnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:snapshot-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ri",
        "ARN": "arn:aws:rds:${Region}:${Account}:ri:${ReservedDbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:ri-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:ri-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cluster-snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-snapshot-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "secgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:secgrp:${SecurityGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:secgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:secgrp-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cev",
        "ARN": "arn:aws:rds:${Region}:${Account}:cev:${Engine}/${EngineVersion}/${CustomDbEngineVersionId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "proxy-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy-endpoint:${DbProxyEndpointId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "target-group",
        "ARN": "arn:aws:rds:${Region}:${Account}:target-group:${TargetGroupId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "ApplyPendingMaintenanceAction",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "AuthorizeDBSecurityGroupIngress",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "secgrp"
    ],
    "supportedResources": [
      {
        "Name": "secgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:secgrp:${SecurityGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:secgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:secgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "BacktrackDBCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "CancelExportTask",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CopyDBClusterParameterGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-pg"
    ],
    "supportedResources": [
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      }
    ]
  },
  {
    "name": "CopyDBClusterSnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-snapshot"
    ],
    "supportedResources": [
      {
        "Name": "cluster-snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      }
    ]
  },
  {
    "name": "CopyDBParameterGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "pg"
    ],
    "supportedResources": [
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      }
    ]
  },
  {
    "name": "CopyDBSnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:snapshot:${SnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      }
    ]
  },
  {
    "name": "CopyOptionGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      }
    ]
  },
  {
    "name": "CreateCustomDBEngineVersion",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cev"
    ],
    "supportedResources": [
      {
        "Name": "cev",
        "ARN": "arn:aws:rds:${Region}:${Account}:cev:${Engine}/${EngineVersion}/${CustomDbEngineVersionId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      }
    ]
  },
  {
    "name": "CreateDBCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og",
      "cluster",
      "subgrp",
      "cluster-pg"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": false
      },
      {
        "Name": "global-cluster",
        "ARN": "arn:aws:rds::${Account}:global-cluster:${GlobalCluster}",
        "RegEx": "^arn:aws:rds:.+",
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "rds:DatabaseName",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the user-defined name of the database on the DB instance"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "rds:StorageEncrypted",
        "Type": "Bool",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the value that specifies whether the DB instance storage should be encrypted. To enforce storage encryption, specify true"
      },
      {
        "Name": "rds:Piops",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the value that contains the number of Provisioned IOPS (PIOPS) that the instance supports. To indicate a DB instance that does not have PIOPS enabled, specify 0"
      },
      {
        "Name": "rds:StorageSize",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the storage volume size (in GB)"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:DatabaseClass",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the type of DB instance class"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      },
      {
        "Name": "rds:DatabaseEngine",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the database engine. For possible values refer to the engine parameter in CreateDBInstance API"
      }
    ]
  },
  {
    "name": "CreateDBClusterEndpoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-endpoint",
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "cluster-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-endpoint:${DbClusterEndpoint}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "rds:EndpointType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the type of the endpoint. One of: READER, WRITER, CUSTOM"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      }
    ]
  },
  {
    "name": "CreateDBClusterParameterGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-pg"
    ],
    "supportedResources": [
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "CreateDBClusterSnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster",
      "cluster-snapshot"
    ],
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster-snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "CreateDBInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      },
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "secgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:secgrp:${SecurityGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:secgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:secgrp-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "rds:BackupTarget",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the type of backup target. One of: REGION, OUTPOSTS"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "CreateDBInstanceReadReplica",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og",
      "db",
      "subgrp"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      },
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "CreateDBParameterGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "pg"
    ],
    "supportedResources": [
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "CreateDBProxy",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateDBProxyEndpoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "proxy",
      "proxy-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "proxy",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy:${DbProxyId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "proxy-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy-endpoint:${DbProxyEndpointId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      }
    ]
  },
  {
    "name": "CreateDBSecurityGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "secgrp"
    ],
    "supportedResources": [
      {
        "Name": "secgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:secgrp:${SecurityGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:secgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:secgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "CreateDBSnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot",
      "db"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:snapshot:${SnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "rds:BackupTarget",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the type of backup target. One of: REGION, OUTPOSTS"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "CreateDBSubnetGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subgrp"
    ],
    "supportedResources": [
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "CreateEventSubscription",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "es"
    ],
    "supportedResources": [
      {
        "Name": "es",
        "ARN": "arn:aws:rds:${Region}:${Account}:es:${SubscriptionName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:es-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:es-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "CreateGlobalCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "global-cluster",
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "global-cluster",
        "ARN": "arn:aws:rds::${Account}:global-cluster:${GlobalCluster}",
        "RegEx": "^arn:aws:rds:.+",
        "isRequired": true
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "CreateOptionGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "CrossRegionCommunication",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteCustomDBEngineVersion",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cev"
    ],
    "supportedResources": [
      {
        "Name": "cev",
        "ARN": "arn:aws:rds:${Region}:${Account}:cev:${Engine}/${EngineVersion}/${CustomDbEngineVersionId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteDBCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster",
      "cluster-snapshot"
    ],
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster-snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteDBClusterEndpoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "cluster-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-endpoint:${DbClusterEndpoint}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteDBClusterParameterGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-pg"
    ],
    "supportedResources": [
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteDBClusterSnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-snapshot"
    ],
    "supportedResources": [
      {
        "Name": "cluster-snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteDBInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteDBInstanceAutomatedBackup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteDBParameterGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "pg"
    ],
    "supportedResources": [
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteDBProxy",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "proxy"
    ],
    "supportedResources": [
      {
        "Name": "proxy",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy:${DbProxyId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteDBProxyEndpoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "proxy-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "proxy-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy-endpoint:${DbProxyEndpointId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteDBSecurityGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "secgrp"
    ],
    "supportedResources": [
      {
        "Name": "secgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:secgrp:${SecurityGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:secgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:secgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteDBSnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:snapshot:${SnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteDBSubnetGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subgrp"
    ],
    "supportedResources": [
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteEventSubscription",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "es"
    ],
    "supportedResources": [
      {
        "Name": "es",
        "ARN": "arn:aws:rds:${Region}:${Account}:es:${SubscriptionName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:es-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:es-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteGlobalCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "global-cluster"
    ],
    "supportedResources": [
      {
        "Name": "global-cluster",
        "ARN": "arn:aws:rds::${Account}:global-cluster:${GlobalCluster}",
        "RegEx": "^arn:aws:rds:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteOptionGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeregisterDBProxyTargets",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "proxy",
      "target-group",
      "db",
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "proxy",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy:${DbProxyId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "target-group",
        "ARN": "arn:aws:rds:${Region}:${Account}:target-group:${TargetGroupId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeAccountAttributes",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeCertificates",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeDBClusterBacktracks",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBClusterEndpoints",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "cluster-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-endpoint:${DbClusterEndpoint}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBClusterParameterGroups",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-pg"
    ],
    "supportedResources": [
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBClusterParameters",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-pg"
    ],
    "supportedResources": [
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBClusterSnapshotAttributes",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-snapshot"
    ],
    "supportedResources": [
      {
        "Name": "cluster-snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBClusterSnapshots",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-snapshot"
    ],
    "supportedResources": [
      {
        "Name": "cluster-snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBClusters",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBEngineVersions",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeDBInstanceAutomatedBackups",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBLogFiles",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBParameterGroups",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "pg"
    ],
    "supportedResources": [
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBParameters",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "pg"
    ],
    "supportedResources": [
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBProxies",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "proxy"
    ],
    "supportedResources": [
      {
        "Name": "proxy",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy:${DbProxyId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBProxyEndpoints",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "proxy",
      "proxy-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "proxy",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy:${DbProxyId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "proxy-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy-endpoint:${DbProxyEndpointId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBProxyTargetGroups",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "proxy"
    ],
    "supportedResources": [
      {
        "Name": "proxy",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy:${DbProxyId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBProxyTargets",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "proxy",
      "target-group",
      "db",
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "proxy",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy:${DbProxyId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "target-group",
        "ARN": "arn:aws:rds:${Region}:${Account}:target-group:${TargetGroupId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBSecurityGroups",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "secgrp"
    ],
    "supportedResources": [
      {
        "Name": "secgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:secgrp:${SecurityGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:secgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:secgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBSnapshotAttributes",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:snapshot:${SnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBSnapshots",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:snapshot:${SnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeDBSubnetGroups",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subgrp"
    ],
    "supportedResources": [
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeEngineDefaultClusterParameters",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeEngineDefaultParameters",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeEventCategories",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeEventSubscriptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "es"
    ],
    "supportedResources": [
      {
        "Name": "es",
        "ARN": "arn:aws:rds:${Region}:${Account}:es:${SubscriptionName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:es-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:es-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeEvents",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeExportTasks",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeGlobalClusters",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "global-cluster"
    ],
    "supportedResources": [
      {
        "Name": "global-cluster",
        "ARN": "arn:aws:rds::${Account}:global-cluster:${GlobalCluster}",
        "RegEx": "^arn:aws:rds:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeOptionGroupOptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeOptionGroups",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeOrderableDBInstanceOptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribePendingMaintenanceActions",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeRecommendationGroups",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeRecommendations",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeReservedDBInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ri"
    ],
    "supportedResources": [
      {
        "Name": "ri",
        "ARN": "arn:aws:rds:${Region}:${Account}:ri:${ReservedDbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:ri-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:ri-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeReservedDBInstancesOfferings",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeSourceRegions",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeValidDBInstanceModifications",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DownloadCompleteDBLogFile",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DownloadDBLogFilePortion",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "FailoverDBCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "FailoverGlobalCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "global-cluster",
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "global-cluster",
        "ARN": "arn:aws:rds::${Account}:global-cluster:${GlobalCluster}",
        "RegEx": "^arn:aws:rds:.+",
        "isRequired": true
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListTagsForResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "es",
        "ARN": "arn:aws:rds:${Region}:${Account}:es:${SubscriptionName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:es-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:es-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cluster-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-endpoint:${DbClusterEndpoint}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": false
      },
      {
        "Name": "proxy",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy:${DbProxyId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:snapshot:${SnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:snapshot-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ri",
        "ARN": "arn:aws:rds:${Region}:${Account}:ri:${ReservedDbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:ri-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:ri-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cluster-snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-snapshot-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "secgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:secgrp:${SecurityGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:secgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:secgrp-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cev",
        "ARN": "arn:aws:rds:${Region}:${Account}:cev:${Engine}/${EngineVersion}/${CustomDbEngineVersionId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "proxy-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy-endpoint:${DbProxyEndpointId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "target-group",
        "ARN": "arn:aws:rds:${Region}:${Account}:target-group:${TargetGroupId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyCertificates",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ModifyCurrentDBClusterCapacity",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyCustomDBEngineVersion",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cev"
    ],
    "supportedResources": [
      {
        "Name": "cev",
        "ARN": "arn:aws:rds:${Region}:${Account}:cev:${Engine}/${EngineVersion}/${CustomDbEngineVersionId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyDBCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og",
      "cluster",
      "cluster-pg"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "rds:Piops",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the value that contains the number of Provisioned IOPS (PIOPS) that the instance supports. To indicate a DB instance that does not have PIOPS enabled, specify 0"
      },
      {
        "Name": "rds:StorageSize",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the storage volume size (in GB)"
      },
      {
        "Name": "rds:DatabaseClass",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the type of DB instance class"
      }
    ]
  },
  {
    "name": "ModifyDBClusterEndpoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "cluster-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-endpoint:${DbClusterEndpoint}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyDBClusterParameterGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-pg"
    ],
    "supportedResources": [
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyDBClusterSnapshotAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-snapshot"
    ],
    "supportedResources": [
      {
        "Name": "cluster-snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyDBInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og",
      "pg",
      "db",
      "secgrp"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      },
      {
        "Name": "secgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:secgrp:${SecurityGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:secgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:secgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyDBParameterGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "pg"
    ],
    "supportedResources": [
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyDBProxy",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "proxy"
    ],
    "supportedResources": [
      {
        "Name": "proxy",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy:${DbProxyId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyDBProxyEndpoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "proxy-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "proxy-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy-endpoint:${DbProxyEndpointId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyDBProxyTargetGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "target-group"
    ],
    "supportedResources": [
      {
        "Name": "target-group",
        "ARN": "arn:aws:rds:${Region}:${Account}:target-group:${TargetGroupId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyDBSnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:snapshot:${SnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyDBSnapshotAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:snapshot:${SnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyDBSubnetGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subgrp"
    ],
    "supportedResources": [
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyEventSubscription",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "es"
    ],
    "supportedResources": [
      {
        "Name": "es",
        "ARN": "arn:aws:rds:${Region}:${Account}:es:${SubscriptionName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:es-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:es-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyGlobalCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "global-cluster"
    ],
    "supportedResources": [
      {
        "Name": "global-cluster",
        "ARN": "arn:aws:rds::${Account}:global-cluster:${GlobalCluster}",
        "RegEx": "^arn:aws:rds:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyOptionGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ModifyRecommendation",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PromoteReadReplica",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "PromoteReadReplicaDBCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "PurchaseReservedDBInstancesOffering",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ri"
    ],
    "supportedResources": [
      {
        "Name": "ri",
        "ARN": "arn:aws:rds:${Region}:${Account}:ri:${ReservedDbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:ri-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:ri-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      }
    ]
  },
  {
    "name": "RebootDBCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "RebootDBInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "RegisterDBProxyTargets",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "target-group"
    ],
    "supportedResources": [
      {
        "Name": "target-group",
        "ARN": "arn:aws:rds:${Region}:${Account}:target-group:${TargetGroupId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "RemoveFromGlobalCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "global-cluster",
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "global-cluster",
        "ARN": "arn:aws:rds::${Account}:global-cluster:${GlobalCluster}",
        "RegEx": "^arn:aws:rds:.+",
        "isRequired": true
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "RemoveRoleFromDBCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "RemoveRoleFromDBInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "RemoveSourceIdentifierFromSubscription",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "es"
    ],
    "supportedResources": [
      {
        "Name": "es",
        "ARN": "arn:aws:rds:${Region}:${Account}:es:${SubscriptionName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:es-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:es-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "RemoveTagsFromResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "es",
        "ARN": "arn:aws:rds:${Region}:${Account}:es:${SubscriptionName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:es-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:es-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cluster-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-endpoint:${DbClusterEndpoint}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": false
      },
      {
        "Name": "proxy",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy:${DbProxyId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:snapshot:${SnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:snapshot-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ri",
        "ARN": "arn:aws:rds:${Region}:${Account}:ri:${ReservedDbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:ri-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:ri-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cluster-snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-snapshot-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "secgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:secgrp:${SecurityGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:secgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:secgrp-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "cev",
        "ARN": "arn:aws:rds:${Region}:${Account}:cev:${Engine}/${EngineVersion}/${CustomDbEngineVersionId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "proxy-endpoint",
        "ARN": "arn:aws:rds:${Region}:${Account}:db-proxy-endpoint:${DbProxyEndpointId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "target-group",
        "ARN": "arn:aws:rds:${Region}:${Account}:target-group:${TargetGroupId}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "ResetDBClusterParameterGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster-pg"
    ],
    "supportedResources": [
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ResetDBParameterGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "pg"
    ],
    "supportedResources": [
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "RestoreDBClusterFromS3",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og",
      "cluster",
      "subgrp",
      "cluster-pg"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "rds:DatabaseName",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the user-defined name of the database on the DB instance"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "rds:StorageEncrypted",
        "Type": "Bool",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the value that specifies whether the DB instance storage should be encrypted. To enforce storage encryption, specify true"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      },
      {
        "Name": "rds:DatabaseEngine",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the database engine. For possible values refer to the engine parameter in CreateDBInstance API"
      }
    ]
  },
  {
    "name": "RestoreDBClusterFromSnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og",
      "cluster",
      "subgrp",
      "cluster-snapshot",
      "cluster-pg"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster-snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "rds:Piops",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the value that contains the number of Provisioned IOPS (PIOPS) that the instance supports. To indicate a DB instance that does not have PIOPS enabled, specify 0"
      },
      {
        "Name": "rds:StorageSize",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the storage volume size (in GB)"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:DatabaseClass",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the type of DB instance class"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "RestoreDBClusterToPointInTime",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og",
      "cluster",
      "subgrp",
      "cluster-pg"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "cluster-pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:cluster-pg-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "rds:Piops",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the value that contains the number of Provisioned IOPS (PIOPS) that the instance supports. To indicate a DB instance that does not have PIOPS enabled, specify 0"
      },
      {
        "Name": "rds:StorageSize",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the storage volume size (in GB)"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:DatabaseClass",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the type of DB instance class"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "RestoreDBInstanceFromDBSnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og",
      "pg",
      "snapshot",
      "db",
      "subgrp"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:rds:${Region}:${Account}:snapshot:${SnapshotName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:snapshot-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:snapshot-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      },
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "rds:BackupTarget",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the type of backup target. One of: REGION, OUTPOSTS"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "RestoreDBInstanceFromS3",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og",
      "pg",
      "db",
      "subgrp"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      },
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "RestoreDBInstanceToPointInTime",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "og",
      "pg",
      "db",
      "subgrp"
    ],
    "supportedResources": [
      {
        "Name": "og",
        "ARN": "arn:aws:rds:${Region}:${Account}:og:${OptionGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:og-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:og-tag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "pg",
        "ARN": "arn:aws:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:pg-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:pg-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      },
      {
        "Name": "subgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:subgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:subgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "rds:BackupTarget",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the type of backup target. One of: REGION, OUTPOSTS"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the set of tag keys in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the set of tag key-value pairs in the request"
      },
      {
        "Name": "rds:req-tag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/security_iam_service-with-iam.html#UsingWithRDS.IAM.Conditions",
        "Description": "Filters access by the set of tag keys and values that can be used to tag a resource"
      }
    ]
  },
  {
    "name": "RevokeDBSecurityGroupIngress",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "secgrp"
    ],
    "supportedResources": [
      {
        "Name": "secgrp",
        "ARN": "arn:aws:rds:${Region}:${Account}:secgrp:${SecurityGroupName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:secgrp-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "rds:secgrp-tag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StartActivityStream",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StartDBCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StartDBInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StartDBInstanceAutomatedBackupsReplication",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StartExportTask",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "StopActivityStream",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StopDBCluster",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cluster"
    ],
    "supportedResources": [
      {
        "Name": "cluster",
        "ARN": "arn:aws:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:cluster-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:cluster-tag/${tagkey}",
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StopDBInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StopDBInstanceAutomatedBackupsReplication",
    "evaluated": false,
    "allowed": false,
    "prefix": "rds",
    "service": "Amazon RDS",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "db"
    ],
    "supportedResources": [
      {
        "Name": "db",
        "ARN": "arn:aws:rds:${Region}:${Account}:db:${DbInstanceName}",
        "RegEx": "^arn:aws:rds:.+",
        "ContextKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:StorageEncrypted",
          "rds:Vpc",
          "rds:db-tag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "rds:piops",
          "aws:resourcetag/${tagkey}",
          "rds:databasename",
          "rds:databaseclass",
          "rds:multiaz",
          "rds:db-tag/${tagkey}",
          "rds:databaseengine",
          "rds:storageencrypted",
          "rds:vpc",
          "rds:storagesize"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  }
]