[
  {
    "name": "AcceptReservedInstancesExchangeQuote",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "AcceptTransitGatewayMulticastDomainAssociations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-multicast-domain",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AcceptTransitGatewayPeeringAttachment",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AcceptTransitGatewayVpcAttachment",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AcceptVpcEndpointConnections",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-endpoint-service"
    ],
    "supportedResources": [
      {
        "Name": "vpc-endpoint-service",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AcceptVpcPeeringConnection",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-peering-connection",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "vpc-peering-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AccepterVpc",
          "ec2:RequesterVpc",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpcPeeringConnectionID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:acceptervpc",
          "ec2:vpcpeeringconnectionid",
          "ec2:requestervpc"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AdvertiseByoipCidr",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "AllocateAddress",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "elastic-ip"
    ],
    "supportedResources": [
      {
        "Name": "elastic-ip",
        "ARN": "arn:aws:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "ipv4pool-ec2",
        "ARN": "arn:aws:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AllocateHosts",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "dedicated-host"
    ],
    "supportedResources": [
      {
        "Name": "dedicated-host",
        "ARN": "arn:aws:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AutoPlacement",
          "ec2:AvailabilityZone",
          "ec2:HostRecovery",
          "ec2:InstanceType",
          "ec2:Quantity"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:autoplacement",
          "aws:requesttag/${tagkey}",
          "ec2:quantity",
          "ec2:hostrecovery",
          "ec2:instancetype",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AllocateIpamPoolCidr",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-pool"
    ],
    "supportedResources": [
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ApplySecurityGroupsToClientVpnTargetNetwork",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "security-group",
      "client-vpn-endpoint",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": true
      },
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssignIpv6Addresses",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-interface"
    ],
    "supportedResources": [
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssignPrivateIpAddresses",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-interface"
    ],
    "supportedResources": [
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssociateAddress",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "elastic-ip",
        "ARN": "arn:aws:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AllocationId",
          "ec2:Domain",
          "ec2:PublicIpAddress",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:domain",
          "ec2:resourcetag/${tagkey}",
          "ec2:allocationid",
          "ec2:publicipaddress"
        ],
        "isRequired": false
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": false
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssociateClientVpnTargetNetwork",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subnet",
      "client-vpn-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid"
        ],
        "isRequired": true
      },
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssociateDhcpOptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "dhcp-options",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "dhcp-options",
        "ARN": "arn:aws:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:DhcpOptionsID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "ec2:dhcpoptionsid",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssociateEnclaveCertificateIamRole",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "certificate",
      "role"
    ],
    "supportedResources": [
      {
        "Name": "certificate",
        "ARN": "arn:aws:acm:${Region}:${Account}:certificate/${CertificateId}",
        "RegEx": "^arn:aws:acm:.+:[0-9]+:.+",
        "isRequired": true
      },
      {
        "Name": "role",
        "ARN": "arn:aws:iam::${Account}:role/${RoleNameWithPath}",
        "RegEx": "^arn:aws:iam:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssociateIamInstanceProfile",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:NewInstanceProfile",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "ec2:newinstanceprofile",
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssociateInstanceEventWindow",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance-event-window"
    ],
    "supportedResources": [
      {
        "Name": "instance-event-window",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssociateRouteTable",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "route-table"
    ],
    "supportedResources": [
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RouteTableID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:routetableid",
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpn-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:InternetGatewayID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:internetgatewayid",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssociateSubnetCidrBlock",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subnet"
    ],
    "supportedResources": [
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssociateTransitGatewayMulticastDomain",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-multicast-domain",
      "subnet",
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-multicast-domain",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssociateTransitGatewayPolicyTable",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-policy-table",
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-policy-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-policy-table/${TransitGatewayPolicyTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssociateTransitGatewayRouteTable",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table",
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AssociateTrunkInterface",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "AssociateVpcCidrBlock",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Ipv4IpamPoolId",
          "ec2:Ipv6IpamPoolId",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:ipv6ipampoolid",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid",
          "ec2:ipv4ipampoolid"
        ],
        "isRequired": true
      },
      {
        "Name": "ipv6pool-ec2",
        "ARN": "arn:aws:ec2:${Region}:${Account}:ipv6pool-ec2/${Ipv6PoolEc2Id}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AttachClassicLinkVpc",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "security-group",
      "instance",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": true
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AttachInternetGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "internet-gateway",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:InternetGatewayID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:internetgatewayid",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AttachNetworkInterface",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-interface",
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AttachVolume",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance",
      "volume"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      },
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:ParentSnapshot",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:resourcetag/${tagkey}",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "ec2:volumetype",
          "ec2:availabilityzone",
          "ec2:encrypted"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AttachVpnGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpn-gateway",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "vpn-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AuthorizeClientVpnIngress",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "client-vpn-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AuthorizeSecurityGroupEgress",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "security-group",
      "security-group-rule"
    ],
    "supportedResources": [
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": true
      },
      {
        "Name": "security-group-rule",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group-rule/${SecurityGroupRuleId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "AuthorizeSecurityGroupIngress",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "security-group",
      "security-group-rule"
    ],
    "supportedResources": [
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": true
      },
      {
        "Name": "security-group-rule",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group-rule/${SecurityGroupRuleId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "BundleInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CancelBundleTask",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CancelCapacityReservation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "capacity-reservation"
    ],
    "supportedResources": [
      {
        "Name": "capacity-reservation",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:CapacityReservationFleet",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:capacityreservationfleet",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CancelCapacityReservationFleets",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "capacity-reservation-fleet"
    ],
    "supportedResources": [
      {
        "Name": "capacity-reservation-fleet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CancelConversionTask",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CancelExportTask",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "export-image-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:export-image-task/${ExportImageTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "export-instance-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CancelImportTask",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "import-image-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:import-image-task/${ImportImageTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "import-snapshot-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:import-snapshot-task/${ImportSnapshotTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CancelReservedInstancesListing",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CancelSpotFleetRequests",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "spot-fleet-request"
    ],
    "supportedResources": [
      {
        "Name": "spot-fleet-request",
        "ARN": "arn:aws:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CancelSpotInstanceRequests",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "spot-instances-request"
    ],
    "supportedResources": [
      {
        "Name": "spot-instances-request",
        "ARN": "arn:aws:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ConfirmProductInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CopyFpgaImage",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "fpga-image"
    ],
    "supportedResources": [
      {
        "Name": "fpga-image",
        "ARN": "arn:aws:ec2:${Region}::fpga-image/${FpgaImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "ec2:Owner"
        ],
        "ContextKeyStrings": [
          "ec2:owner"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CopyImage",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "image"
    ],
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "ec2:ImageID",
          "ec2:Owner"
        ],
        "ContextKeyStrings": [
          "ec2:owner",
          "ec2:imageid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CopySnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:OutpostArn",
          "ec2:SnapshotID",
          "ec2:SourceOutpostArn"
        ],
        "ContextKeyStrings": [
          "ec2:outpostarn",
          "aws:tagkeys",
          "aws:requesttag/${tagkey}",
          "ec2:sourceoutpostarn",
          "ec2:snapshotid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateCapacityReservation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "capacity-reservation"
    ],
    "supportedResources": [
      {
        "Name": "capacity-reservation",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:CapacityReservationFleet"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:capacityreservationfleet",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateCapacityReservationFleet",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "capacity-reservation-fleet"
    ],
    "supportedResources": [
      {
        "Name": "capacity-reservation-fleet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateCarrierGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "carrier-gateway",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "carrier-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateClientVpnEndpoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "client-vpn-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:cloudwatchlogstreamarn",
          "ec2:clientrootcertificatechainarn",
          "aws:requesttag/${tagkey}",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": true
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateClientVpnRoute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subnet",
      "client-vpn-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid"
        ],
        "isRequired": true
      },
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateCoipPoolPermission",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateCustomerGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "customer-gateway"
    ],
    "supportedResources": [
      {
        "Name": "customer-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateDefaultSubnet",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateDefaultVpc",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateDhcpOptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "dhcp-options"
    ],
    "supportedResources": [
      {
        "Name": "dhcp-options",
        "ARN": "arn:aws:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:DhcpOptionsID"
        ],
        "ContextKeyStrings": [
          "ec2:dhcpoptionsid",
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateEgressOnlyInternetGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "egress-only-internet-gateway",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "egress-only-internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateFleet",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "fleet",
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "fleet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:fleet/${FleetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceID",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:PlacementGroup",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:tagkeys",
          "ec2:instanceid",
          "ec2:rootdevicetype",
          "ec2:placementgroup",
          "aws:requesttag/${tagkey}",
          "ec2:instanceprofile",
          "ec2:instancetype",
          "ec2:availabilityzone",
          "ec2:ebsoptimized"
        ],
        "isRequired": true
      },
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:KmsKeyId",
          "ec2:ParentSnapshot",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "aws:requesttag/${tagkey}",
          "ec2:kmskeyid",
          "ec2:volumetype",
          "ec2:availabilityzone",
          "ec2:encrypted"
        ],
        "isRequired": false
      },
      {
        "Name": "launch-template",
        "ARN": "arn:aws:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:snapshotid"
        ],
        "isRequired": false
      },
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": false
      },
      {
        "Name": "key-pair",
        "ARN": "arn:aws:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:KeyPairName",
          "ec2:KeyPairType",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:keypairname",
          "ec2:keypairtype",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AssociatePublicIpAddress",
          "ec2:AuthorizedService",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:authorizedservice",
          "ec2:availabilityzone",
          "ec2:associatepublicipaddress"
        ],
        "isRequired": false
      },
      {
        "Name": "placement-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:PlacementGroupName",
          "ec2:PlacementGroupStrategy",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:placementgroupname",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroupstrategy"
        ],
        "isRequired": false
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateFlowLogs",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-flow-log"
    ],
    "supportedResources": [
      {
        "Name": "vpc-flow-log",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": false
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateFpgaImage",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "fpga-image"
    ],
    "supportedResources": [
      {
        "Name": "fpga-image",
        "ARN": "arn:aws:ec2:${Region}::fpga-image/${FpgaImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Owner",
          "ec2:Public"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:owner",
          "aws:requesttag/${tagkey}",
          "ec2:public"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateImage",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot",
      "instance",
      "image"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:OutpostArn",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:SourceOutpostArn",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "ec2:outpostarn",
          "aws:tagkeys",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:snapshottime",
          "aws:requesttag/${tagkey}",
          "ec2:sourceoutpostarn",
          "ec2:snapshotid"
        ],
        "isRequired": true
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      },
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:ImageID",
          "ec2:Owner"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:owner",
          "aws:requesttag/${tagkey}",
          "ec2:imageid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateInstanceEventWindow",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance-event-window"
    ],
    "supportedResources": [
      {
        "Name": "instance-event-window",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateInstanceExportTask",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "export-instance-task",
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "export-instance-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateInternetGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "internet-gateway"
    ],
    "supportedResources": [
      {
        "Name": "internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:InternetGatewayID"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:internetgatewayid",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateIpam",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam"
    ],
    "supportedResources": [
      {
        "Name": "ipam",
        "ARN": "arn:aws:ec2::${Account}:ipam/${IpamId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateIpamPool",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-scope",
      "ipam-pool"
    ],
    "supportedResources": [
      {
        "Name": "ipam-scope",
        "ARN": "arn:aws:ec2::${Account}:ipam-scope/${IpamScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateIpamScope",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam",
      "ipam-scope"
    ],
    "supportedResources": [
      {
        "Name": "ipam",
        "ARN": "arn:aws:ec2::${Account}:ipam/${IpamId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "ipam-scope",
        "ARN": "arn:aws:ec2::${Account}:ipam-scope/${IpamScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateKeyPair",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "key-pair"
    ],
    "supportedResources": [
      {
        "Name": "key-pair",
        "ARN": "arn:aws:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:KeyPairType"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:keypairtype",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateLaunchTemplate",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "launch-template"
    ],
    "supportedResources": [
      {
        "Name": "launch-template",
        "ARN": "arn:aws:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateLaunchTemplateVersion",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "launch-template"
    ],
    "supportedResources": [
      {
        "Name": "launch-template",
        "ARN": "arn:aws:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateLocalGatewayRoute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "local-gateway-route-table",
      "local-gateway-virtual-interface-group"
    ],
    "supportedResources": [
      {
        "Name": "local-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "local-gateway-virtual-interface-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/${LocalGatewayVirtualInterfaceGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateLocalGatewayRouteTablePermission",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "local-gateway-route-table"
    ],
    "supportedResources": [
      {
        "Name": "local-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateLocalGatewayRouteTableVpcAssociation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "local-gateway-route-table",
      "local-gateway-route-table-vpc-association",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "local-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "local-gateway-route-table-vpc-association",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateManagedPrefixList",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "prefix-list"
    ],
    "supportedResources": [
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateNatGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subnet",
      "natgateway"
    ],
    "supportedResources": [
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      },
      {
        "Name": "natgateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:natgateway/${NatGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "elastic-ip",
        "ARN": "arn:aws:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AllocationId",
          "ec2:Domain",
          "ec2:PublicIpAddress",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:domain",
          "ec2:resourcetag/${tagkey}",
          "ec2:allocationid",
          "ec2:publicipaddress"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateNetworkAcl",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-acl",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "network-acl",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-acl/${NaclId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:NetworkAclID"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}",
          "ec2:networkaclid"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateNetworkAclEntry",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-acl"
    ],
    "supportedResources": [
      {
        "Name": "network-acl",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-acl/${NaclId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:NetworkAclID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:networkaclid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateNetworkInsightsAccessScope",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-insights-access-scope"
    ],
    "supportedResources": [
      {
        "Name": "network-insights-access-scope",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateNetworkInsightsPath",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-insights-path"
    ],
    "supportedResources": [
      {
        "Name": "network-insights-path",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-path/${NetworkInsightsPathId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpn-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceID",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:PlacementGroup",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:instanceprofile",
          "ec2:instancetype",
          "ec2:availabilityzone",
          "ec2:ebsoptimized"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:InternetGatewayID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:internetgatewayid",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AssociatePublicIpAddress",
          "ec2:AuthorizedService",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:authorizedservice",
          "ec2:availabilityzone",
          "ec2:associatepublicipaddress"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-peering-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AccepterVpc",
          "ec2:RequesterVpc",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpcPeeringConnectionID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:acceptervpc",
          "ec2:vpcpeeringconnectionid",
          "ec2:requestervpc"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateNetworkInterface",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subnet",
      "network-interface"
    ],
    "supportedResources": [
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:NetworkInterfaceID"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateNetworkInterfacePermission",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-interface"
    ],
    "supportedResources": [
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AuthorizedService",
          "ec2:AuthorizedUser",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:Permission",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:authorizeduser",
          "ec2:networkinterfaceid",
          "ec2:permission",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:authorizedservice",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreatePlacementGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "placement-group"
    ],
    "supportedResources": [
      {
        "Name": "placement-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:PlacementGroupName",
          "ec2:PlacementGroupStrategy"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:placementgroupname",
          "aws:requesttag/${tagkey}",
          "ec2:placementgroupstrategy"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreatePublicIpv4Pool",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-insights-access-scope"
    ],
    "supportedResources": [
      {
        "Name": "network-insights-access-scope",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateReplaceRootVolumeTask",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "volume",
      "replace-root-volume-task",
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:VolumeID"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:volumeid",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "replace-root-volume-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:replace-root-volume-task/${ReplaceRootVolumeTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:snapshotid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateReservedInstancesListing",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateRestoreImageTask",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "image"
    ],
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:ImageID",
          "ec2:Owner"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:owner",
          "aws:requesttag/${tagkey}",
          "ec2:imageid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateRoute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "route-table"
    ],
    "supportedResources": [
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RouteTableID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:routetableid",
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateRouteTable",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "route-table",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:RouteTableID"
        ],
        "ContextKeyStrings": [
          "ec2:routetableid",
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateSecurityGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "security-group"
    ],
    "supportedResources": [
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:SecurityGroupID"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateSnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "volume",
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Encrypted",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:resourcetag/${tagkey}",
          "ec2:volumeid",
          "ec2:volumeiops",
          "ec2:volumetype",
          "ec2:encrypted"
        ],
        "isRequired": true
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:OutpostArn",
          "ec2:ParentVolume",
          "ec2:SnapshotID",
          "ec2:SourceOutpostArn",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "ec2:outpostarn",
          "aws:tagkeys",
          "ec2:volumesize",
          "aws:requesttag/${tagkey}",
          "ec2:sourceoutpostarn",
          "ec2:snapshotid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateSnapshots",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance",
      "volume",
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceID",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:PlacementGroup",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:instanceprofile",
          "ec2:instancetype",
          "ec2:availabilityzone",
          "ec2:ebsoptimized"
        ],
        "isRequired": true
      },
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Encrypted",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:resourcetag/${tagkey}",
          "ec2:volumeid",
          "ec2:volumeiops",
          "ec2:volumetype",
          "ec2:encrypted"
        ],
        "isRequired": true
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:OutpostArn",
          "ec2:ParentVolume",
          "ec2:SnapshotID",
          "ec2:SourceOutpostArn",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "ec2:outpostarn",
          "aws:tagkeys",
          "ec2:volumesize",
          "aws:requesttag/${tagkey}",
          "ec2:sourceoutpostarn",
          "ec2:snapshotid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateSpotDatafeedSubscription",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateStoreImageTask",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "image"
    ],
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateSubnet",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subnet",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:SubnetID"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:subnetid",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateSubnetCidrReservation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateTags",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ipv4pool-ec2",
        "ARN": "arn:aws:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-acl",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-acl/${NaclId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:NetworkAclID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:networkaclid"
        ],
        "isRequired": false
      },
      {
        "Name": "launch-template",
        "ARN": "arn:aws:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "instance-event-window",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "import-image-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:import-image-task/${ImportImageTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "local-gateway-route-table-vpc-association",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "egress-only-internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-multicast-domain",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-peering-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AccepterVpc",
          "ec2:RequesterVpc",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpcPeeringConnectionID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:acceptervpc",
          "ec2:vpcpeeringconnectionid",
          "ec2:requestervpc"
        ],
        "isRequired": false
      },
      {
        "Name": "traffic-mirror-filter",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "host-reservation",
        "ARN": "arn:aws:ec2:${Region}:${Account}:host-reservation/${HostReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "fpga-image",
        "ARN": "arn:aws:ec2:${Region}::fpga-image/${FpgaImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:public"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "local-gateway-route-table-virtual-interface-group-association",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table-virtual-interface-group-association/${LocalGatewayRouteTableVirtualInterfaceGroupAssociationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:InternetGatewayID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:internetgatewayid",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-route-table-announcement",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table-announcement/${TransitGatewayRouteTableAnnouncementId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "carrier-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "elastic-ip",
        "ARN": "arn:aws:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AllocationId",
          "ec2:Domain",
          "ec2:PublicIpAddress",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:domain",
          "ec2:resourcetag/${tagkey}",
          "ec2:allocationid",
          "ec2:publicipaddress"
        ],
        "isRequired": false
      },
      {
        "Name": "ipam-scope",
        "ARN": "arn:aws:ec2::${Account}:ipam-scope/${IpamScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "security-group-rule",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group-rule/${SecurityGroupRuleId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-endpoint-service",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpceServicePrivateDnsName"
        ],
        "ContextKeyStrings": [
          "ec2:vpceserviceprivatednsname",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "dedicated-host",
        "ARN": "arn:aws:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AutoPlacement",
          "ec2:AvailabilityZone",
          "ec2:HostRecovery",
          "ec2:InstanceType",
          "ec2:Quantity",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:autoplacement",
          "ec2:resourcetag/${tagkey}",
          "ec2:quantity",
          "ec2:hostrecovery",
          "ec2:instancetype",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-insights-access-scope",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:ParentSnapshot",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:resourcetag/${tagkey}",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "ec2:volumetype",
          "ec2:availabilityzone",
          "ec2:encrypted"
        ],
        "isRequired": false
      },
      {
        "Name": "ipv6pool-ec2",
        "ARN": "arn:aws:ec2:${Region}:${Account}:ipv6pool-ec2/${Ipv6PoolEc2Id}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "replace-root-volume-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:replace-root-volume-task/${ReplaceRootVolumeTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "import-snapshot-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:import-snapshot-task/${ImportSnapshotTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-connect-peer",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-connect-peer/${TransitGatewayConnectPeerId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": false
      },
      {
        "Name": "dhcp-options",
        "ARN": "arn:aws:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:DhcpOptionsID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "ec2:dhcpoptionsid",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "local-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "export-image-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:export-image-task/${ExportImageTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "traffic-mirror-target",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-target.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RouteTableID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:routetableid",
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "fleet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:fleet/${FleetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpn-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "capacity-reservation-fleet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-insights-access-scope-analysis",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-access-scope-analysis/${NetworkInsightsAccessScopeAnalysisId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "spot-fleet-request",
        "ARN": "arn:aws:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "local-gateway-virtual-interface-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/${LocalGatewayVirtualInterfaceGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "natgateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:natgateway/${NatGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "spot-instances-request",
        "ARN": "arn:aws:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-flow-log",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "local-gateway-virtual-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-virtual-interface/${LocalGatewayVirtualInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "reserved-instances",
        "ARN": "arn:aws:ec2:${Region}:${Account}:reserved-instances/${ReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:InstanceType",
          "ec2:ReservedInstancesOfferingType",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:reservedinstancesofferingtype",
          "ec2:instancetype",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      },
      {
        "Name": "traffic-mirror-session",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-session.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpn-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AuthenticationType",
          "ec2:DPDTimeoutSeconds",
          "ec2:GatewayType",
          "ec2:IKEVersions",
          "ec2:InsideTunnelCidr",
          "ec2:InsideTunnelIpv6Cidr",
          "ec2:Phase1DHGroup",
          "ec2:Phase1EncryptionAlgorithms",
          "ec2:Phase1IntegrityAlgorithms",
          "ec2:Phase1LifetimeSeconds",
          "ec2:Phase2DHGroup",
          "ec2:Phase2EncryptionAlgorithms",
          "ec2:Phase2IntegrityAlgorithms",
          "ec2:Phase2LifetimeSeconds",
          "ec2:PreSharedKeys",
          "ec2:RekeyFuzzPercentage",
          "ec2:RekeyMarginTimeSeconds",
          "ec2:ReplayWindowSizePackets",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RoutingType"
        ],
        "ContextKeyStrings": [
          "ec2:authenticationtype",
          "aws:resourcetag/${tagkey}",
          "ec2:ikeversions",
          "ec2:dpdtimeoutseconds",
          "ec2:replaywindowsizepackets",
          "ec2:phase1lifetimeseconds",
          "ec2:routingtype",
          "ec2:phase1integrityalgorithms",
          "ec2:phase2encryptionalgorithms",
          "ec2:rekeymargintimeseconds",
          "ec2:gatewaytype",
          "ec2:insidetunnelipv6cidr",
          "ec2:phase2dhgroup",
          "ec2:phase1dhgroup",
          "ec2:phase1encryptionalgorithms",
          "ec2:phase2integrityalgorithms",
          "ec2:resourcetag/${tagkey}",
          "ec2:insidetunnelcidr",
          "ec2:presharedkeys",
          "ec2:rekeyfuzzpercentage",
          "ec2:phase2lifetimeseconds"
        ],
        "isRequired": false
      },
      {
        "Name": "local-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway/${LocalGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:availabilityzone",
          "ec2:encrypted",
          "ec2:snapshotid"
        ],
        "isRequired": false
      },
      {
        "Name": "network-insights-path",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-path/${NetworkInsightsPathId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "placement-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:PlacementGroupName",
          "ec2:PlacementGroupStrategy",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:placementgroupname",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroupstrategy"
        ],
        "isRequired": false
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      },
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": false
      },
      {
        "Name": "elastic-gpu",
        "ARN": "arn:aws:ec2:${Region}:${Account}:elastic-gpu/${ElasticGpuId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ElasticGpuType",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:elasticgputype"
        ],
        "isRequired": false
      },
      {
        "Name": "export-instance-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "capacity-reservation",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-policy-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-policy-table/${TransitGatewayPolicyTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "customer-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": false
      },
      {
        "Name": "key-pair",
        "ARN": "arn:aws:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:KeyPairName",
          "ec2:KeyPairType",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:keypairname",
          "ec2:keypairtype",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": false
      },
      {
        "Name": "network-insights-analysis",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-analysis/${NetworkInsightsAnalysisId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AssociatePublicIpAddress",
          "ec2:AuthorizedService",
          "ec2:AuthorizedUser",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:Permission",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:authorizeduser",
          "ec2:networkinterfaceid",
          "ec2:permission",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:authorizedservice",
          "ec2:availabilityzone",
          "ec2:associatepublicipaddress"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet-cidr-reservation",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet-cidr-reservation/${SubnetCidrReservationId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:subnet-cidr-reservation.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ipam",
        "ARN": "arn:aws:ec2::${Account}:ipam/${IpamId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      },
      {
        "Name": "ec2:CreateAction",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/supported-iam-actions-tagging.html",
        "Description": "Filters access by the name of a resource-creating API action"
      }
    ]
  },
  {
    "name": "CreateTrafficMirrorFilter",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "traffic-mirror-filter"
    ],
    "supportedResources": [
      {
        "Name": "traffic-mirror-filter",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter.*",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTrafficMirrorFilterRule",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "traffic-mirror-filter"
    ],
    "supportedResources": [
      {
        "Name": "traffic-mirror-filter",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTrafficMirrorSession",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "traffic-mirror-session",
      "traffic-mirror-target",
      "traffic-mirror-filter",
      "network-interface"
    ],
    "supportedResources": [
      {
        "Name": "traffic-mirror-session",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-session.*",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "traffic-mirror-target",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-target.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "traffic-mirror-filter",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTrafficMirrorTarget",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "traffic-mirror-target"
    ],
    "supportedResources": [
      {
        "Name": "traffic-mirror-target",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-target.*",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpceServiceName",
          "ec2:VpceServiceOwner"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpceserviceowner",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpceservicename"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTransitGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTransitGatewayConnect",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTransitGatewayConnectPeer",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-connect-peer",
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-connect-peer",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-connect-peer/${TransitGatewayConnectPeerId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTransitGatewayMulticastDomain",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-multicast-domain",
      "transit-gateway"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-multicast-domain",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTransitGatewayPeeringAttachment",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway",
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTransitGatewayPolicyTable",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-policy-table",
      "transit-gateway"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-policy-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-policy-table/${TransitGatewayPolicyTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTransitGatewayPrefixListReference",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table",
      "prefix-list"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTransitGatewayRoute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTransitGatewayRouteTable",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table",
      "transit-gateway"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTransitGatewayRouteTableAnnouncement",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table",
      "transit-gateway-route-table-announcement",
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-route-table-announcement",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table-announcement/${TransitGatewayRouteTableAnnouncementId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateTransitGatewayVpcAttachment",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway",
      "transit-gateway-attachment",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateVolume",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "volume"
    ],
    "supportedResources": [
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:KmsKeyId",
          "ec2:ParentSnapshot",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "aws:requesttag/${tagkey}",
          "ec2:kmskeyid",
          "ec2:volumetype",
          "ec2:availabilityzone",
          "ec2:encrypted"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateVpc",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Ipv4IpamPoolId",
          "ec2:Ipv6IpamPoolId",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:ipv6ipampoolid",
          "ec2:vpcid",
          "aws:requesttag/${tagkey}",
          "ec2:ipv4ipampoolid"
        ],
        "isRequired": true
      },
      {
        "Name": "ipv6pool-ec2",
        "ARN": "arn:aws:ec2:${Region}:${Account}:ipv6pool-ec2/${Ipv6PoolEc2Id}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateVpcEndpoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc",
      "vpc-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:VpceServiceName",
          "ec2:VpceServiceOwner"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:vpceserviceowner",
          "aws:requesttag/${tagkey}",
          "ec2:vpceservicename"
        ],
        "isRequired": true
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      },
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RouteTableID"
        ],
        "ContextKeyStrings": [
          "ec2:routetableid",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateVpcEndpointConnectionNotification",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "vpc-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateVpcEndpointServiceConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-endpoint-service"
    ],
    "supportedResources": [
      {
        "Name": "vpc-endpoint-service",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:VpceServicePrivateDnsName"
        ],
        "ContextKeyStrings": [
          "ec2:vpceserviceprivatednsname",
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateVpcPeeringConnection",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-peering-connection",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "vpc-peering-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AccepterVpc",
          "ec2:RequesterVpc",
          "ec2:VpcPeeringConnectionID"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:acceptervpc",
          "ec2:vpcpeeringconnectionid",
          "aws:requesttag/${tagkey}",
          "ec2:requestervpc"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateVpnConnection",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpn-connection",
      "customer-gateway"
    ],
    "supportedResources": [
      {
        "Name": "vpn-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AuthenticationType",
          "ec2:DPDTimeoutSeconds",
          "ec2:GatewayType",
          "ec2:IKEVersions",
          "ec2:InsideTunnelCidr",
          "ec2:InsideTunnelIpv6Cidr",
          "ec2:Phase1DHGroup",
          "ec2:Phase1EncryptionAlgorithms",
          "ec2:Phase1IntegrityAlgorithms",
          "ec2:Phase1LifetimeSeconds",
          "ec2:Phase2DHGroup",
          "ec2:Phase2EncryptionAlgorithms",
          "ec2:Phase2IntegrityAlgorithms",
          "ec2:Phase2LifetimeSeconds",
          "ec2:PreSharedKeys",
          "ec2:RekeyFuzzPercentage",
          "ec2:RekeyMarginTimeSeconds",
          "ec2:ReplayWindowSizePackets",
          "ec2:RoutingType"
        ],
        "ContextKeyStrings": [
          "ec2:authenticationtype",
          "ec2:ikeversions",
          "ec2:dpdtimeoutseconds",
          "ec2:replaywindowsizepackets",
          "ec2:phase1lifetimeseconds",
          "ec2:routingtype",
          "ec2:phase1integrityalgorithms",
          "ec2:phase2encryptionalgorithms",
          "ec2:rekeymargintimeseconds",
          "ec2:gatewaytype",
          "ec2:insidetunnelipv6cidr",
          "ec2:phase2dhgroup",
          "aws:tagkeys",
          "ec2:phase1dhgroup",
          "ec2:phase1encryptionalgorithms",
          "ec2:phase2integrityalgorithms",
          "ec2:insidetunnelcidr",
          "ec2:presharedkeys",
          "aws:requesttag/${tagkey}",
          "ec2:rekeyfuzzpercentage",
          "ec2:phase2lifetimeseconds"
        ],
        "isRequired": true
      },
      {
        "Name": "customer-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpn-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateVpnConnectionRoute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpn-connection"
    ],
    "supportedResources": [
      {
        "Name": "vpn-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "CreateVpnGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpn-gateway"
    ],
    "supportedResources": [
      {
        "Name": "vpn-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteCarrierGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "carrier-gateway"
    ],
    "supportedResources": [
      {
        "Name": "carrier-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteClientVpnEndpoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "client-vpn-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteClientVpnRoute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "client-vpn-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": true
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteCoipPoolPermission",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteCustomerGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "customer-gateway"
    ],
    "supportedResources": [
      {
        "Name": "customer-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteDhcpOptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "dhcp-options"
    ],
    "supportedResources": [
      {
        "Name": "dhcp-options",
        "ARN": "arn:aws:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:DhcpOptionsID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "ec2:dhcpoptionsid",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteEgressOnlyInternetGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "egress-only-internet-gateway"
    ],
    "supportedResources": [
      {
        "Name": "egress-only-internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteFleets",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "fleet"
    ],
    "supportedResources": [
      {
        "Name": "fleet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:fleet/${FleetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteFlowLogs",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-flow-log"
    ],
    "supportedResources": [
      {
        "Name": "vpc-flow-log",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteFpgaImage",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "fpga-image"
    ],
    "supportedResources": [
      {
        "Name": "fpga-image",
        "ARN": "arn:aws:ec2:${Region}::fpga-image/${FpgaImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:public"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteInstanceEventWindow",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance-event-window"
    ],
    "supportedResources": [
      {
        "Name": "instance-event-window",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteInternetGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "internet-gateway"
    ],
    "supportedResources": [
      {
        "Name": "internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:InternetGatewayID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:internetgatewayid",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteIpam",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam"
    ],
    "supportedResources": [
      {
        "Name": "ipam",
        "ARN": "arn:aws:ec2::${Account}:ipam/${IpamId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteIpamPool",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-pool"
    ],
    "supportedResources": [
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteIpamScope",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-scope"
    ],
    "supportedResources": [
      {
        "Name": "ipam-scope",
        "ARN": "arn:aws:ec2::${Account}:ipam-scope/${IpamScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteKeyPair",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "key-pair",
        "ARN": "arn:aws:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:KeyPairName",
          "ec2:KeyPairType",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:keypairname",
          "ec2:keypairtype",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteLaunchTemplate",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "launch-template"
    ],
    "supportedResources": [
      {
        "Name": "launch-template",
        "ARN": "arn:aws:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteLaunchTemplateVersions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "launch-template"
    ],
    "supportedResources": [
      {
        "Name": "launch-template",
        "ARN": "arn:aws:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteLocalGatewayRoute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "local-gateway-route-table"
    ],
    "supportedResources": [
      {
        "Name": "local-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteLocalGatewayRouteTablePermission",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "local-gateway-route-table"
    ],
    "supportedResources": [
      {
        "Name": "local-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteLocalGatewayRouteTableVpcAssociation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "local-gateway-route-table-vpc-association"
    ],
    "supportedResources": [
      {
        "Name": "local-gateway-route-table-vpc-association",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteManagedPrefixList",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "prefix-list"
    ],
    "supportedResources": [
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteNatGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "natgateway"
    ],
    "supportedResources": [
      {
        "Name": "natgateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:natgateway/${NatGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteNetworkAcl",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-acl"
    ],
    "supportedResources": [
      {
        "Name": "network-acl",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-acl/${NaclId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:NetworkAclID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:networkaclid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteNetworkAclEntry",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-acl"
    ],
    "supportedResources": [
      {
        "Name": "network-acl",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-acl/${NaclId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:NetworkAclID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:networkaclid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteNetworkInsightsAccessScope",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-insights-access-scope"
    ],
    "supportedResources": [
      {
        "Name": "network-insights-access-scope",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteNetworkInsightsAccessScopeAnalysis",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-insights-access-scope-analysis"
    ],
    "supportedResources": [
      {
        "Name": "network-insights-access-scope-analysis",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-access-scope-analysis/${NetworkInsightsAccessScopeAnalysisId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteNetworkInsightsAnalysis",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-insights-analysis"
    ],
    "supportedResources": [
      {
        "Name": "network-insights-analysis",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-analysis/${NetworkInsightsAnalysisId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteNetworkInsightsPath",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-insights-path"
    ],
    "supportedResources": [
      {
        "Name": "network-insights-path",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-path/${NetworkInsightsPathId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteNetworkInterface",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-interface"
    ],
    "supportedResources": [
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteNetworkInterfacePermission",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AssociatePublicIpAddress",
          "ec2:AuthorizedService",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:authorizedservice",
          "ec2:availabilityzone",
          "ec2:associatepublicipaddress"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeletePlacementGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "placement-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:PlacementGroupName",
          "ec2:PlacementGroupStrategy",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:placementgroupname",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroupstrategy"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeletePublicIpv4Pool",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipv4pool-ec2"
    ],
    "supportedResources": [
      {
        "Name": "ipv4pool-ec2",
        "ARN": "arn:aws:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteQueuedReservedInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteResourcePolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteRoute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "route-table"
    ],
    "supportedResources": [
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RouteTableID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:routetableid",
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteRouteTable",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "route-table"
    ],
    "supportedResources": [
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RouteTableID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:routetableid",
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteSecurityGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "security-group"
    ],
    "supportedResources": [
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteSnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:OutpostArn",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:SourceOutpostArn",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "ec2:outpostarn",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:sourceoutpostarn",
          "ec2:snapshotid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteSpotDatafeedSubscription",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteSubnet",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subnet"
    ],
    "supportedResources": [
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteSubnetCidrReservation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteTags",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ipv4pool-ec2",
        "ARN": "arn:aws:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "launch-template",
        "ARN": "arn:aws:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "instance-event-window",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "import-image-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:import-image-task/${ImportImageTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "local-gateway-route-table-vpc-association",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "egress-only-internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-multicast-domain",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "traffic-mirror-filter",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "host-reservation",
        "ARN": "arn:aws:ec2:${Region}:${Account}:host-reservation/${HostReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "dedicated-host",
        "ARN": "arn:aws:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "fpga-image",
        "ARN": "arn:aws:ec2:${Region}::fpga-image/${FpgaImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "local-gateway-route-table-virtual-interface-group-association",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table-virtual-interface-group-association/${LocalGatewayRouteTableVirtualInterfaceGroupAssociationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-route-table-announcement",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table-announcement/${TransitGatewayRouteTableAnnouncementId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ipam-scope",
        "ARN": "arn:aws:ec2::${Account}:ipam-scope/${IpamScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "security-group-rule",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group-rule/${SecurityGroupRuleId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-insights-access-scope",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "elastic-ip",
        "ARN": "arn:aws:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-endpoint-service",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ipv6pool-ec2",
        "ARN": "arn:aws:ec2:${Region}:${Account}:ipv6pool-ec2/${Ipv6PoolEc2Id}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "replace-root-volume-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:replace-root-volume-task/${ReplaceRootVolumeTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "import-snapshot-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:import-snapshot-task/${ImportSnapshotTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-connect-peer",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-connect-peer/${TransitGatewayConnectPeerId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "elastic-gpu",
        "ARN": "arn:aws:ec2:${Region}:${Account}:elastic-gpu/${ElasticGpuId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "placement-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "local-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "export-image-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:export-image-task/${ExportImageTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "traffic-mirror-target",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-target.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "dhcp-options",
        "ARN": "arn:aws:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-acl",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-acl/${NaclId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "fleet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:fleet/${FleetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpn-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "capacity-reservation-fleet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "carrier-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-insights-access-scope-analysis",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-access-scope-analysis/${NetworkInsightsAccessScopeAnalysisId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "spot-fleet-request",
        "ARN": "arn:aws:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpn-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "local-gateway-virtual-interface-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/${LocalGatewayVirtualInterfaceGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "natgateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:natgateway/${NatGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "spot-instances-request",
        "ARN": "arn:aws:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-flow-log",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "reserved-instances",
        "ARN": "arn:aws:ec2:${Region}:${Account}:reserved-instances/${ReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "local-gateway-virtual-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-virtual-interface/${LocalGatewayVirtualInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "traffic-mirror-session",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-session.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "local-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway/${LocalGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-insights-path",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-path/${NetworkInsightsPathId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "key-pair",
        "ARN": "arn:aws:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "export-instance-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "capacity-reservation",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-policy-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-policy-table/${TransitGatewayPolicyTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "customer-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-insights-analysis",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-analysis/${NetworkInsightsAnalysisId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet-cidr-reservation",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet-cidr-reservation/${SubnetCidrReservationId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:subnet-cidr-reservation.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ipam",
        "ARN": "arn:aws:ec2::${Account}:ipam/${IpamId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-peering-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/supported-iam-actions-tagging.html#control-tagging",
        "Description": "Filters access by a list of tag keys that are allowed in the request"
      }
    ]
  },
  {
    "name": "DeleteTrafficMirrorFilter",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "traffic-mirror-filter"
    ],
    "supportedResources": [
      {
        "Name": "traffic-mirror-filter",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTrafficMirrorFilterRule",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "traffic-mirror-filter",
      "traffic-mirror-filter-rule"
    ],
    "supportedResources": [
      {
        "Name": "traffic-mirror-filter",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "traffic-mirror-filter-rule",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter-rule/${TrafficMirrorFilterRuleId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter-rule.*",
        "ContextKeys": [
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:Region"
        ],
        "ContextKeyStrings": [
          "ec2:region",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTrafficMirrorSession",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "traffic-mirror-session"
    ],
    "supportedResources": [
      {
        "Name": "traffic-mirror-session",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-session.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTrafficMirrorTarget",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "traffic-mirror-target"
    ],
    "supportedResources": [
      {
        "Name": "traffic-mirror-target",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-target.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTransitGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTransitGatewayConnect",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTransitGatewayConnectPeer",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-connect-peer"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-connect-peer",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-connect-peer/${TransitGatewayConnectPeerId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTransitGatewayMulticastDomain",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-multicast-domain"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-multicast-domain",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTransitGatewayPeeringAttachment",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTransitGatewayPolicyTable",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-policy-table"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-policy-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-policy-table/${TransitGatewayPolicyTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTransitGatewayPrefixListReference",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table",
      "prefix-list"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTransitGatewayRoute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTransitGatewayRouteTable",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTransitGatewayRouteTableAnnouncement",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table-announcement"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table-announcement",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table-announcement/${TransitGatewayRouteTableAnnouncementId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteTransitGatewayVpcAttachment",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteVolume",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "volume"
    ],
    "supportedResources": [
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:ParentSnapshot",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:resourcetag/${tagkey}",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "ec2:volumetype",
          "ec2:availabilityzone",
          "ec2:encrypted"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteVpc",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteVpcEndpointConnectionNotifications",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "vpc-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-endpoint-service",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteVpcEndpointServiceConfigurations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-endpoint-service"
    ],
    "supportedResources": [
      {
        "Name": "vpc-endpoint-service",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteVpcEndpoints",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "vpc-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpceServiceName"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpceservicename"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteVpcPeeringConnection",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-peering-connection"
    ],
    "supportedResources": [
      {
        "Name": "vpc-peering-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AccepterVpc",
          "ec2:RequesterVpc",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpcPeeringConnectionID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:acceptervpc",
          "ec2:vpcpeeringconnectionid",
          "ec2:requestervpc"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteVpnConnection",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpn-connection"
    ],
    "supportedResources": [
      {
        "Name": "vpn-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteVpnConnectionRoute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpn-connection"
    ],
    "supportedResources": [
      {
        "Name": "vpn-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeleteVpnGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpn-gateway"
    ],
    "supportedResources": [
      {
        "Name": "vpn-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeprovisionByoipCidr",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeprovisionIpamPoolCidr",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-pool"
    ],
    "supportedResources": [
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeprovisionPublicIpv4PoolCidr",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipv4pool-ec2"
    ],
    "supportedResources": [
      {
        "Name": "ipv4pool-ec2",
        "ARN": "arn:aws:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeregisterImage",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "image"
    ],
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeregisterInstanceEventNotificationAttributes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeregisterTransitGatewayMulticastGroupMembers",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "transit-gateway-multicast-domain",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DeregisterTransitGatewayMulticastGroupSources",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "transit-gateway-multicast-domain",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeAccountAttributes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeAddresses",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeAddressesAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "elastic-ip",
        "ARN": "arn:aws:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AllocationId",
          "ec2:Domain",
          "ec2:PublicIpAddress",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:domain",
          "ec2:resourcetag/${tagkey}",
          "ec2:allocationid",
          "ec2:publicipaddress"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeAggregateIdFormat",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeAvailabilityZones",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeBundleTasks",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeByoipCidrs",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeCapacityReservationFleets",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeCapacityReservations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeCarrierGateways",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeClassicLinkInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeClientVpnAuthorizationRules",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeClientVpnConnections",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeClientVpnEndpoints",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeClientVpnRoutes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeClientVpnTargetNetworks",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeCoipPools",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeConversionTasks",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeCustomerGateways",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeDhcpOptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeEgressOnlyInternetGateways",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeElasticGpus",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeExportImageTasks",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeExportTasks",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeFastLaunchImages",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeFastSnapshotRestores",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeFleetHistory",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "fleet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:fleet/${FleetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeFleetInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "fleet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:fleet/${FleetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeFleets",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "fleet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:fleet/${FleetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeFlowLogs",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeFpgaImageAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "fpga-image"
    ],
    "supportedResources": [
      {
        "Name": "fpga-image",
        "ARN": "arn:aws:ec2:${Region}::fpga-image/${FpgaImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute/${AttributeName}",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:public"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeFpgaImages",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeHostReservationOfferings",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeHostReservations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeHosts",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeIamInstanceProfileAssociations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeIdFormat",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeIdentityIdFormat",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeImageAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeImages",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeImportImageTasks",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeImportSnapshotTasks",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeInstanceAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeInstanceCreditSpecifications",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeInstanceEventNotificationAttributes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeInstanceEventWindows",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeInstanceStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeInstanceTypeOfferings",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeInstanceTypes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeInternetGateways",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeIpamPools",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeIpamScopes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeIpams",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeIpv6Pools",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeKeyPairs",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeLaunchTemplateVersions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeLaunchTemplates",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeLocalGatewayRouteTablePermissions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeLocalGatewayRouteTableVpcAssociations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeLocalGatewayRouteTables",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeLocalGatewayVirtualInterfaceGroups",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeLocalGatewayVirtualInterfaces",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeLocalGateways",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeManagedPrefixLists",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeMovingAddresses",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeNatGateways",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeNetworkAcls",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeNetworkInsightsAccessScopeAnalyses",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeNetworkInsightsAccessScopes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeNetworkInsightsAnalyses",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeNetworkInsightsPaths",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeNetworkInterfaceAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeNetworkInterfacePermissions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeNetworkInterfaces",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribePlacementGroups",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribePrefixLists",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribePrincipalIdFormat",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribePublicIpv4Pools",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeRegions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeReplaceRootVolumeTasks",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeReservedInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeReservedInstancesListings",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeReservedInstancesModifications",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeReservedInstancesOfferings",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeRouteTables",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeScheduledInstanceAvailability",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeScheduledInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeSecurityGroupReferences",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeSecurityGroupRules",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeSecurityGroups",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeSnapshotAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:OutpostArn",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:SourceOutpostArn",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "ec2:outpostarn",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:sourceoutpostarn",
          "ec2:availabilityzone",
          "ec2:encrypted",
          "ec2:snapshotid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeSnapshotTierStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeSnapshots",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeSpotDatafeedSubscription",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeSpotFleetInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "spot-fleet-request",
        "ARN": "arn:aws:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeSpotFleetRequestHistory",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "spot-fleet-request",
        "ARN": "arn:aws:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeSpotFleetRequests",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeSpotInstanceRequests",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeSpotPriceHistory",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeStaleSecurityGroups",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeStoreImageTasks",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeSubnets",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTags",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTrafficMirrorFilters",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTrafficMirrorSessions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTrafficMirrorTargets",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTransitGatewayAttachments",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTransitGatewayConnectPeers",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTransitGatewayConnects",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTransitGatewayMulticastDomains",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTransitGatewayPeeringAttachments",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTransitGatewayPolicyTables",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTransitGatewayRouteTableAnnouncements",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTransitGatewayRouteTables",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTransitGatewayVpcAttachments",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTransitGateways",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeTrunkInterfaceAssociations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVolumeAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:KmsKeyId",
          "ec2:ParentSnapshot",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:resourcetag/${tagkey}",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "ec2:kmskeyid",
          "ec2:volumetype",
          "ec2:availabilityzone",
          "ec2:encrypted"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeVolumeStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVolumes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVolumesModifications",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVpcAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DescribeVpcClassicLink",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVpcClassicLinkDnsSupport",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVpcEndpointConnectionNotifications",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVpcEndpointConnections",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVpcEndpointServiceConfigurations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVpcEndpointServicePermissions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVpcEndpointServices",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVpcEndpoints",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVpcPeeringConnections",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVpcs",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVpnConnections",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeVpnGateways",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DetachClassicLinkVpc",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DetachInternetGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "internet-gateway",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:InternetGatewayID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:internetgatewayid",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DetachNetworkInterface",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-interface",
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DetachVolume",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "volume"
    ],
    "supportedResources": [
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:ParentSnapshot",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:resourcetag/${tagkey}",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "ec2:volumetype",
          "ec2:availabilityzone",
          "ec2:encrypted"
        ],
        "isRequired": true
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DetachVpnGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpn-gateway",
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "vpn-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisableEbsEncryptionByDefault",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DisableFastLaunch",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisableFastSnapshotRestores",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:availabilityzone",
          "ec2:encrypted",
          "ec2:snapshotid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisableImageDeprecation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "image"
    ],
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisableIpamOrganizationAdminAccount",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DisableSerialConsoleAccess",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DisableTransitGatewayRouteTablePropagation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table",
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-route-table-announcement",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table-announcement/${TransitGatewayRouteTableAnnouncementId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisableVgwRoutePropagation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "route-table",
      "vpn-gateway"
    ],
    "supportedResources": [
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RouteTableID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:routetableid",
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpn-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisableVpcClassicLink",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisableVpcClassicLinkDnsSupport",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisassociateAddress",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "elastic-ip",
        "ARN": "arn:aws:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AllocationId",
          "ec2:Domain",
          "ec2:PublicIpAddress",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:domain",
          "ec2:resourcetag/${tagkey}",
          "ec2:allocationid",
          "ec2:publicipaddress"
        ],
        "isRequired": false
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisassociateClientVpnTargetNetwork",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "client-vpn-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisassociateEnclaveCertificateIamRole",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "certificate",
      "role"
    ],
    "supportedResources": [
      {
        "Name": "certificate",
        "ARN": "arn:aws:acm:${Region}:${Account}:certificate/${CertificateId}",
        "RegEx": "^arn:aws:acm:.+:[0-9]+:.+",
        "isRequired": true
      },
      {
        "Name": "role",
        "ARN": "arn:aws:iam::${Account}:role/${RoleNameWithPath}",
        "RegEx": "^arn:aws:iam:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisassociateIamInstanceProfile",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisassociateInstanceEventWindow",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance-event-window"
    ],
    "supportedResources": [
      {
        "Name": "instance-event-window",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisassociateRouteTable",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RouteTableID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:routetableid",
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisassociateSubnetCidrBlock",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subnet"
    ],
    "supportedResources": [
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisassociateTransitGatewayMulticastDomain",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-multicast-domain",
      "subnet",
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-multicast-domain",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisassociateTransitGatewayPolicyTable",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-policy-table",
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-policy-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-policy-table/${TransitGatewayPolicyTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisassociateTransitGatewayRouteTable",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table",
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "DisassociateTrunkInterface",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DisassociateVpcCidrBlock",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "EnableEbsEncryptionByDefault",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "EnableFastLaunch",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "launch-template",
        "ARN": "arn:aws:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "EnableFastSnapshotRestores",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:availabilityzone",
          "ec2:encrypted",
          "ec2:snapshotid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "EnableImageDeprecation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "image"
    ],
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "EnableIpamOrganizationAdminAccount",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "EnableSerialConsoleAccess",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "EnableTransitGatewayRouteTablePropagation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table",
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-route-table-announcement",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table-announcement/${TransitGatewayRouteTableAnnouncementId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "EnableVgwRoutePropagation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "route-table",
      "vpn-gateway"
    ],
    "supportedResources": [
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RouteTableID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:routetableid",
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpn-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "EnableVolumeIO",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "volume"
    ],
    "supportedResources": [
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:ParentSnapshot",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:resourcetag/${tagkey}",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "ec2:volumetype",
          "ec2:availabilityzone",
          "ec2:encrypted"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "EnableVpcClassicLink",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "EnableVpcClassicLinkDnsSupport",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ExportClientVpnClientCertificateRevocationList",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "client-vpn-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ExportClientVpnClientConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "client-vpn-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ExportImage",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "image",
      "export-image-task"
    ],
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": true
      },
      {
        "Name": "export-image-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:export-image-task/${ExportImageTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ExportTransitGatewayRoutes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetAssociatedEnclaveCertificateIamRoles",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "certificate"
    ],
    "supportedResources": [
      {
        "Name": "certificate",
        "ARN": "arn:aws:acm:${Region}:${Account}:certificate/${CertificateId}",
        "RegEx": "^arn:aws:acm:.+:[0-9]+:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetAssociatedIpv6PoolCidrs",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetCapacityReservationUsage",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "capacity-reservation"
    ],
    "supportedResources": [
      {
        "Name": "capacity-reservation",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:CapacityReservationFleet",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:capacityreservationfleet",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetCoipPoolUsage",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetConsoleOutput",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetConsoleScreenshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:NewInstanceProfile",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "ec2:newinstanceprofile",
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetDefaultCreditSpecification",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetEbsDefaultKmsKeyId",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetEbsEncryptionByDefault",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetFlowLogsIntegrationTemplate",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-flow-log"
    ],
    "supportedResources": [
      {
        "Name": "vpc-flow-log",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetGroupsForCapacityReservation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "capacity-reservation"
    ],
    "supportedResources": [
      {
        "Name": "capacity-reservation",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:CapacityReservationFleet",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:capacityreservationfleet",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetHostReservationPurchasePreview",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetInstanceTypesFromInstanceRequirements",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetInstanceUefiData",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:NewInstanceProfile",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "ec2:newinstanceprofile",
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetIpamAddressHistory",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-scope"
    ],
    "supportedResources": [
      {
        "Name": "ipam-scope",
        "ARN": "arn:aws:ec2::${Account}:ipam-scope/${IpamScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetIpamPoolAllocations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-pool"
    ],
    "supportedResources": [
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetIpamPoolCidrs",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-pool"
    ],
    "supportedResources": [
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetIpamResourceCidrs",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-scope",
      "ipam-pool"
    ],
    "supportedResources": [
      {
        "Name": "ipam-scope",
        "ARN": "arn:aws:ec2::${Account}:ipam-scope/${IpamScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetLaunchTemplateData",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetManagedPrefixListAssociations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "prefix-list"
    ],
    "supportedResources": [
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetManagedPrefixListEntries",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "prefix-list"
    ],
    "supportedResources": [
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetNetworkInsightsAccessScopeAnalysisFindings",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetNetworkInsightsAccessScopeContent",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetPasswordData",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetReservedInstancesExchangeQuote",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetResourcePolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetSerialConsoleAccessStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetSpotPlacementScores",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetSubnetCidrReservations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetTransitGatewayAttachmentPropagations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetTransitGatewayMulticastDomainAssociations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetTransitGatewayPolicyTableAssociations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-policy-table"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-policy-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-policy-table/${TransitGatewayPolicyTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetTransitGatewayPolicyTableEntries",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-policy-table"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-policy-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-policy-table/${TransitGatewayPolicyTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetTransitGatewayPrefixListReferences",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetTransitGatewayRouteTableAssociations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetTransitGatewayRouteTablePropagations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetVpnConnectionDeviceSampleConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpn-connection"
    ],
    "supportedResources": [
      {
        "Name": "vpn-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "vpn-connection-device-type",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-connection-device-type/${VpnConnectionDeviceTypeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "ec2:Region"
        ],
        "ContextKeyStrings": [
          "ec2:region"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "GetVpnConnectionDeviceTypes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ImportClientVpnClientCertificateRevocationList",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "client-vpn-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ImportImage",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "image",
      "import-image-task"
    ],
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "aws:requesttag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": true
      },
      {
        "Name": "import-image-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:import-image-task/${ImportImageTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:snapshotid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ImportInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance",
      "volume"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:InstanceID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      },
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:ParentSnapshot",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:resourcetag/${tagkey}",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "ec2:volumetype",
          "ec2:availabilityzone",
          "ec2:encrypted"
        ],
        "isRequired": true
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ImportKeyPair",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "key-pair"
    ],
    "supportedResources": [
      {
        "Name": "key-pair",
        "ARN": "arn:aws:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ImportSnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot",
      "import-snapshot-task"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:tagkeys",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:snapshottime",
          "aws:requesttag/${tagkey}",
          "ec2:snapshotid"
        ],
        "isRequired": true
      },
      {
        "Name": "import-snapshot-task",
        "ARN": "arn:aws:ec2:${Region}:${Account}:import-snapshot-task/${ImportSnapshotTaskId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ImportVolume",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "volume"
    ],
    "supportedResources": [
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:ParentSnapshot",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:resourcetag/${tagkey}",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "ec2:volumetype",
          "ec2:availabilityzone",
          "ec2:encrypted"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ListImagesInRecycleBin",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ListSnapshotsInRecycleBin",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:availabilityzone",
          "ec2:encrypted",
          "ec2:snapshotid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyAddressAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "elastic-ip"
    ],
    "supportedResources": [
      {
        "Name": "elastic-ip",
        "ARN": "arn:aws:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AllocationId",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:Domain",
          "ec2:PublicIpAddress",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:domain",
          "ec2:resourcetag/${tagkey}",
          "ec2:allocationid",
          "ec2:attribute/${attributename}",
          "ec2:attribute",
          "ec2:publicipaddress"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyAvailabilityZoneGroup",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ModifyCapacityReservation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "capacity-reservation"
    ],
    "supportedResources": [
      {
        "Name": "capacity-reservation",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:CapacityReservationFleet",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:capacityreservationfleet",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyCapacityReservationFleet",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "capacity-reservation-fleet"
    ],
    "supportedResources": [
      {
        "Name": "capacity-reservation-fleet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyClientVpnEndpoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "client-vpn-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:attribute/${attributename}",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn",
          "ec2:attribute"
        ],
        "isRequired": true
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyDefaultCreditSpecification",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ModifyEbsDefaultKmsKeyId",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ModifyFleet",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "fleet"
    ],
    "supportedResources": [
      {
        "Name": "fleet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:fleet/${FleetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      },
      {
        "Name": "launch-template",
        "ARN": "arn:aws:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "key-pair",
        "ARN": "arn:aws:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:KeyPairName",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:keypairname",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:snapshotid"
        ],
        "isRequired": false
      },
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": false
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AssociatePublicIpAddress",
          "ec2:AuthorizedService",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:authorizedservice",
          "ec2:availabilityzone",
          "ec2:associatepublicipaddress"
        ],
        "isRequired": false
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyFpgaImageAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "fpga-image"
    ],
    "supportedResources": [
      {
        "Name": "fpga-image",
        "ARN": "arn:aws:ec2:${Region}::fpga-image/${FpgaImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute",
          "ec2:public"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyHosts",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "dedicated-host"
    ],
    "supportedResources": [
      {
        "Name": "dedicated-host",
        "ARN": "arn:aws:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyIdFormat",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ModifyIdentityIdFormat",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ModifyImageAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "image"
    ],
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:attribute/${attributename}",
          "ec2:attribute",
          "ec2:public"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyInstanceAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:attribute",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:attribute/${attributename}",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      },
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:ParentSnapshot",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:resourcetag/${tagkey}",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "ec2:volumetype",
          "ec2:availabilityzone",
          "ec2:encrypted"
        ],
        "isRequired": false
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyInstanceCapacityReservationAttributes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:attribute",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:attribute/${attributename}",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      },
      {
        "Name": "capacity-reservation",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyInstanceCreditSpecification",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:attribute",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:attribute/${attributename}",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyInstanceEventStartTime",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute/${AttributeName}",
          "ec2:InstanceID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyInstanceEventWindow",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance-event-window"
    ],
    "supportedResources": [
      {
        "Name": "instance-event-window",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyInstanceMaintenanceOptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:attribute",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:attribute/${attributename}",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyInstanceMetadataOptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:attribute",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:attribute/${attributename}",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyInstancePlacement",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:attribute",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:attribute/${attributename}",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      },
      {
        "Name": "dedicated-host",
        "ARN": "arn:aws:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "placement-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:PlacementGroupName",
          "ec2:PlacementGroupStrategy",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:placementgroupname",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroupstrategy"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyIpam",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam"
    ],
    "supportedResources": [
      {
        "Name": "ipam",
        "ARN": "arn:aws:ec2::${Account}:ipam/${IpamId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyIpamPool",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-pool"
    ],
    "supportedResources": [
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyIpamResourceCidr",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-scope"
    ],
    "supportedResources": [
      {
        "Name": "ipam-scope",
        "ARN": "arn:aws:ec2::${Account}:ipam-scope/${IpamScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyIpamScope",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-scope"
    ],
    "supportedResources": [
      {
        "Name": "ipam-scope",
        "ARN": "arn:aws:ec2::${Account}:ipam-scope/${IpamScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyLaunchTemplate",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "launch-template"
    ],
    "supportedResources": [
      {
        "Name": "launch-template",
        "ARN": "arn:aws:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyManagedPrefixList",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "prefix-list"
    ],
    "supportedResources": [
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyNetworkInterfaceAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-interface"
    ],
    "supportedResources": [
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyPrivateDnsNameOptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:NewInstanceProfile",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "ec2:newinstanceprofile",
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:attribute",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:attribute/${attributename}",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyReservedInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "reserved-instances"
    ],
    "supportedResources": [
      {
        "Name": "reserved-instances",
        "ARN": "arn:aws:ec2:${Region}:${Account}:reserved-instances/${ReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AvailabilityZone",
          "ec2:InstanceType",
          "ec2:ReservedInstancesOfferingType",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:reservedinstancesofferingtype",
          "ec2:attribute/${attributename}",
          "ec2:instancetype",
          "ec2:attribute",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifySecurityGroupRules",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "security-group"
    ],
    "supportedResources": [
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:securitygroupid",
          "ec2:attribute"
        ],
        "isRequired": true
      },
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "security-group-rule",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group-rule/${SecurityGroupRuleId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifySnapshotAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Add/group",
          "ec2:Add/userId",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:Remove/group",
          "ec2:Remove/userId",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:remove/userid",
          "ec2:attribute",
          "ec2:snapshotid",
          "ec2:parentvolume",
          "ec2:add/group",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:add/userid",
          "ec2:attribute/${attributename}",
          "ec2:remove/group"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifySnapshotTier",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:attribute/${attributename}",
          "ec2:attribute",
          "ec2:availabilityzone",
          "ec2:encrypted",
          "ec2:snapshotid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifySpotFleetRequest",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "spot-fleet-request"
    ],
    "supportedResources": [
      {
        "Name": "spot-fleet-request",
        "ARN": "arn:aws:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      },
      {
        "Name": "launch-template",
        "ARN": "arn:aws:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifySubnetAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subnet"
    ],
    "supportedResources": [
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:attribute/${attributename}",
          "ec2:attribute",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyTrafficMirrorFilterNetworkServices",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "traffic-mirror-filter"
    ],
    "supportedResources": [
      {
        "Name": "traffic-mirror-filter",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyTrafficMirrorFilterRule",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "traffic-mirror-filter",
      "traffic-mirror-filter-rule"
    ],
    "supportedResources": [
      {
        "Name": "traffic-mirror-filter",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      },
      {
        "Name": "traffic-mirror-filter-rule",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter-rule/${TrafficMirrorFilterRuleId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter-rule.*",
        "ContextKeys": [
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}"
        ],
        "ContextKeyStrings": [
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyTrafficMirrorSession",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "traffic-mirror-session"
    ],
    "supportedResources": [
      {
        "Name": "traffic-mirror-session",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-session.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      },
      {
        "Name": "traffic-mirror-target",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-target.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "traffic-mirror-filter",
        "ARN": "arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
        "RegEx": "^arn:aws:ec2:${Region}:${Account}:traffic-mirror-filter.*",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyTransitGateway",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyTransitGatewayPrefixListReference",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "prefix-list",
      "transit-gateway-route-table"
    ],
    "supportedResources": [
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyTransitGatewayVpcAttachment",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVolume",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "volume"
    ],
    "supportedResources": [
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:ParentSnapshot",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:resourcetag/${tagkey}",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "ec2:attribute/${attributename}",
          "ec2:volumetype",
          "ec2:attribute",
          "ec2:availabilityzone",
          "ec2:encrypted"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVolumeAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "volume"
    ],
    "supportedResources": [
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:ParentSnapshot",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:resourcetag/${tagkey}",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "ec2:attribute/${attributename}",
          "ec2:volumetype",
          "ec2:attribute",
          "ec2:availabilityzone",
          "ec2:encrypted"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVpcAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVpcEndpoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "vpc-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      },
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RouteTableID"
        ],
        "ContextKeyStrings": [
          "ec2:routetableid",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVpcEndpointConnectionNotification",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-endpoint",
      "vpc-endpoint-service"
    ],
    "supportedResources": [
      {
        "Name": "vpc-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      },
      {
        "Name": "vpc-endpoint-service",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVpcEndpointServiceConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-endpoint-service"
    ],
    "supportedResources": [
      {
        "Name": "vpc-endpoint-service",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpceServicePrivateDnsName"
        ],
        "ContextKeyStrings": [
          "ec2:vpceserviceprivatednsname",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVpcEndpointServicePayerResponsibility",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-endpoint-service"
    ],
    "supportedResources": [
      {
        "Name": "vpc-endpoint-service",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVpcEndpointServicePermissions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-endpoint-service"
    ],
    "supportedResources": [
      {
        "Name": "vpc-endpoint-service",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVpcPeeringConnectionOptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-peering-connection"
    ],
    "supportedResources": [
      {
        "Name": "vpc-peering-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AccepterVpc",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:RequesterVpc",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpcPeeringConnectionID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:acceptervpc",
          "ec2:vpcpeeringconnectionid",
          "ec2:attribute/${attributename}",
          "ec2:requestervpc",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVpcTenancy",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc"
    ],
    "supportedResources": [
      {
        "Name": "vpc",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc/${VpcId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:VpcID"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:vpcid",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVpnConnection",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpn-connection"
    ],
    "supportedResources": [
      {
        "Name": "vpn-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AuthenticationType",
          "ec2:DPDTimeoutSeconds",
          "ec2:GatewayType",
          "ec2:IKEVersions",
          "ec2:InsideTunnelCidr",
          "ec2:InsideTunnelIpv6Cidr",
          "ec2:Phase1DHGroup",
          "ec2:Phase1EncryptionAlgorithms",
          "ec2:Phase1IntegrityAlgorithms",
          "ec2:Phase1LifetimeSeconds",
          "ec2:Phase2DHGroup",
          "ec2:Phase2EncryptionAlgorithms",
          "ec2:Phase2IntegrityAlgorithms",
          "ec2:Phase2LifetimeSeconds",
          "ec2:PreSharedKeys",
          "ec2:RekeyFuzzPercentage",
          "ec2:RekeyMarginTimeSeconds",
          "ec2:ReplayWindowSizePackets",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RoutingType"
        ],
        "ContextKeyStrings": [
          "ec2:authenticationtype",
          "aws:resourcetag/${tagkey}",
          "ec2:ikeversions",
          "ec2:dpdtimeoutseconds",
          "ec2:replaywindowsizepackets",
          "ec2:phase1lifetimeseconds",
          "ec2:routingtype",
          "ec2:phase1integrityalgorithms",
          "ec2:attribute",
          "ec2:phase2encryptionalgorithms",
          "ec2:rekeymargintimeseconds",
          "ec2:gatewaytype",
          "ec2:insidetunnelipv6cidr",
          "ec2:phase2dhgroup",
          "ec2:phase1dhgroup",
          "ec2:phase1encryptionalgorithms",
          "ec2:phase2integrityalgorithms",
          "ec2:resourcetag/${tagkey}",
          "ec2:insidetunnelcidr",
          "ec2:presharedkeys",
          "ec2:attribute/${attributename}",
          "ec2:rekeyfuzzpercentage",
          "ec2:phase2lifetimeseconds"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVpnConnectionOptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpn-connection"
    ],
    "supportedResources": [
      {
        "Name": "vpn-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVpnTunnelCertificate",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpn-connection"
    ],
    "supportedResources": [
      {
        "Name": "vpn-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ModifyVpnTunnelOptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpn-connection"
    ],
    "supportedResources": [
      {
        "Name": "vpn-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:AuthenticationType",
          "ec2:DPDTimeoutSeconds",
          "ec2:GatewayType",
          "ec2:IKEVersions",
          "ec2:InsideTunnelCidr",
          "ec2:InsideTunnelIpv6Cidr",
          "ec2:Phase1DHGroup",
          "ec2:Phase1EncryptionAlgorithms",
          "ec2:Phase1IntegrityAlgorithms",
          "ec2:Phase1LifetimeSeconds",
          "ec2:Phase2DHGroup",
          "ec2:Phase2EncryptionAlgorithms",
          "ec2:Phase2IntegrityAlgorithms",
          "ec2:Phase2LifetimeSeconds",
          "ec2:PreSharedKeys",
          "ec2:RekeyFuzzPercentage",
          "ec2:RekeyMarginTimeSeconds",
          "ec2:ReplayWindowSizePackets",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RoutingType"
        ],
        "ContextKeyStrings": [
          "ec2:authenticationtype",
          "aws:resourcetag/${tagkey}",
          "ec2:ikeversions",
          "ec2:dpdtimeoutseconds",
          "ec2:replaywindowsizepackets",
          "ec2:phase1lifetimeseconds",
          "ec2:routingtype",
          "ec2:phase1integrityalgorithms",
          "ec2:attribute",
          "ec2:phase2encryptionalgorithms",
          "ec2:rekeymargintimeseconds",
          "ec2:gatewaytype",
          "ec2:insidetunnelipv6cidr",
          "ec2:phase2dhgroup",
          "ec2:phase1dhgroup",
          "ec2:phase1encryptionalgorithms",
          "ec2:phase2integrityalgorithms",
          "ec2:resourcetag/${tagkey}",
          "ec2:insidetunnelcidr",
          "ec2:presharedkeys",
          "ec2:attribute/${attributename}",
          "ec2:rekeyfuzzpercentage",
          "ec2:phase2lifetimeseconds"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "MonitorInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "MoveAddressToVpc",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "MoveByoipCidrToIpam",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ProvisionByoipCidr",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ProvisionIpamPoolCidr",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-pool"
    ],
    "supportedResources": [
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ProvisionPublicIpv4PoolCidr",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-pool"
    ],
    "supportedResources": [
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "ipv4pool-ec2",
        "ARN": "arn:aws:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "PurchaseHostReservation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "dedicated-host"
    ],
    "supportedResources": [
      {
        "Name": "dedicated-host",
        "ARN": "arn:aws:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "PurchaseReservedInstancesOffering",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PurchaseScheduledInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutResourcePolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RebootInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RegisterImage",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "image"
    ],
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:Owner",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid"
        ],
        "isRequired": true
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:OutpostArn",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:SourceOutpostArn",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "ec2:outpostarn",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:sourceoutpostarn",
          "ec2:snapshotid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RegisterInstanceEventNotificationAttributes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "RegisterTransitGatewayMulticastGroupMembers",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-multicast-domain",
      "network-interface"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-multicast-domain",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RegisterTransitGatewayMulticastGroupSources",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-multicast-domain",
      "network-interface"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-multicast-domain",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RejectTransitGatewayMulticastDomainAssociations",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway-multicast-domain",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RejectTransitGatewayPeeringAttachment",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RejectTransitGatewayVpcAttachment",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-attachment"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RejectVpcEndpointConnections",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-endpoint-service"
    ],
    "supportedResources": [
      {
        "Name": "vpc-endpoint-service",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RejectVpcPeeringConnection",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-peering-connection"
    ],
    "supportedResources": [
      {
        "Name": "vpc-peering-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AccepterVpc",
          "ec2:RequesterVpc",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpcPeeringConnectionID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:acceptervpc",
          "ec2:vpcpeeringconnectionid",
          "ec2:requestervpc"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ReleaseAddress",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "elastic-ip",
        "ARN": "arn:aws:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AllocationId",
          "ec2:Domain",
          "ec2:PublicIpAddress",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:domain",
          "ec2:resourcetag/${tagkey}",
          "ec2:allocationid",
          "ec2:publicipaddress"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ReleaseHosts",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "dedicated-host"
    ],
    "supportedResources": [
      {
        "Name": "dedicated-host",
        "ARN": "arn:aws:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ReleaseIpamPoolAllocation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ipam-pool"
    ],
    "supportedResources": [
      {
        "Name": "ipam-pool",
        "ARN": "arn:aws:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ReplaceIamInstanceProfileAssociation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:NewInstanceProfile",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "ec2:newinstanceprofile",
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ReplaceNetworkAclAssociation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "subnet",
      "network-acl"
    ],
    "supportedResources": [
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      },
      {
        "Name": "network-acl",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-acl/${NaclId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:NetworkAclID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:networkaclid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ReplaceNetworkAclEntry",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-acl"
    ],
    "supportedResources": [
      {
        "Name": "network-acl",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-acl/${NaclId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:NetworkAclID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:networkaclid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ReplaceRoute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "route-table"
    ],
    "supportedResources": [
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RouteTableID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:routetableid",
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": false
      },
      {
        "Name": "vpn-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "local-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway/${LocalGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "transit-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "natgateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:natgateway/${NatGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:InternetGatewayID",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:internetgatewayid",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "carrier-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AssociatePublicIpAddress",
          "ec2:AuthorizedService",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:authorizedservice",
          "ec2:availabilityzone",
          "ec2:associatepublicipaddress"
        ],
        "isRequired": false
      },
      {
        "Name": "egress-only-internet-gateway",
        "ARN": "arn:aws:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "vpc-peering-connection",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AccepterVpc",
          "ec2:RequesterVpc",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpcPeeringConnectionID"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:acceptervpc",
          "ec2:vpcpeeringconnectionid",
          "ec2:requestervpc"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ReplaceRouteTableAssociation",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "route-table"
    ],
    "supportedResources": [
      {
        "Name": "route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RouteTableID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:routetableid",
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ReplaceTransitGatewayRoute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "transit-gateway-attachment",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ReportInstanceStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "RequestSpotFleet",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "spot-fleet-request"
    ],
    "supportedResources": [
      {
        "Name": "spot-fleet-request",
        "ARN": "arn:aws:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "launch-template",
        "ARN": "arn:aws:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": false
      },
      {
        "Name": "key-pair",
        "ARN": "arn:aws:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:KeyPairName",
          "ec2:KeyPairType",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:keypairname",
          "ec2:keypairtype",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "placement-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:PlacementGroupName",
          "ec2:PlacementGroupStrategy",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:placementgroupname",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroupstrategy"
        ],
        "isRequired": false
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:OutpostArn",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:SourceOutpostArn",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "ec2:outpostarn",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:sourceoutpostarn",
          "ec2:snapshotid"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RequestSpotInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "spot-instances-request"
    ],
    "supportedResources": [
      {
        "Name": "spot-instances-request",
        "ARN": "arn:aws:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": false
      },
      {
        "Name": "key-pair",
        "ARN": "arn:aws:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:KeyPairName",
          "ec2:KeyPairType",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:keypairname",
          "ec2:keypairtype",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AssociatePublicIpAddress",
          "ec2:AuthorizedService",
          "ec2:AuthorizedUser",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:Permission",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:authorizeduser",
          "ec2:networkinterfaceid",
          "ec2:permission",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:authorizedservice",
          "ec2:availabilityzone",
          "ec2:associatepublicipaddress"
        ],
        "isRequired": false
      },
      {
        "Name": "placement-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:PlacementGroupName",
          "ec2:PlacementGroupStrategy",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:placementgroupname",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroupstrategy"
        ],
        "isRequired": false
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:OutpostArn",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:SourceOutpostArn",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "ec2:outpostarn",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:sourceoutpostarn",
          "ec2:snapshotid"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ResetAddressAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "elastic-ip"
    ],
    "supportedResources": [
      {
        "Name": "elastic-ip",
        "ARN": "arn:aws:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AllocationId",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:Domain",
          "ec2:PublicIpAddress",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:domain",
          "ec2:resourcetag/${tagkey}",
          "ec2:allocationid",
          "ec2:attribute/${attributename}",
          "ec2:attribute",
          "ec2:publicipaddress"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ResetEbsDefaultKmsKeyId",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ResetFpgaImageAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "fpga-image"
    ],
    "supportedResources": [
      {
        "Name": "fpga-image",
        "ARN": "arn:aws:ec2:${Region}::fpga-image/${FpgaImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:attribute/${attributename}",
          "ec2:attribute",
          "ec2:public"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ResetImageAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "image"
    ],
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:attribute/${attributename}",
          "ec2:attribute",
          "ec2:public"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ResetInstanceAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ResetNetworkInterfaceAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-interface"
    ],
    "supportedResources": [
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "ResetSnapshotAttribute",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Attribute",
          "ec2:Attribute/${AttributeName}",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:attribute/${attributename}",
          "ec2:attribute",
          "ec2:snapshotid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RestoreAddressToClassic",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "RestoreImageFromRecycleBin",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "image"
    ],
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RestoreManagedPrefixListVersion",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "prefix-list"
    ],
    "supportedResources": [
      {
        "Name": "prefix-list",
        "ARN": "arn:aws:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RestoreSnapshotFromRecycleBin",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:availabilityzone",
          "ec2:encrypted",
          "ec2:snapshotid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RestoreSnapshotTier",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "snapshot"
    ],
    "supportedResources": [
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:availabilityzone",
          "ec2:encrypted",
          "ec2:snapshotid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RevokeClientVpnIngress",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "client-vpn-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RevokeSecurityGroupEgress",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "security-group"
    ],
    "supportedResources": [
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RevokeSecurityGroupIngress",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "security-group"
    ],
    "supportedResources": [
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RunInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "volume",
      "image",
      "instance",
      "security-group",
      "network-interface",
      "subnet"
    ],
    "supportedResources": [
      {
        "Name": "volume",
        "ARN": "arn:aws:ec2:${Region}:${Account}:volume/${VolumeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:IsLaunchTemplateResource",
          "ec2:LaunchTemplate",
          "ec2:ParentSnapshot",
          "ec2:VolumeID",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeThroughput",
          "ec2:VolumeType"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "ec2:volumesize",
          "ec2:volumethroughput",
          "ec2:volumeid",
          "ec2:parentsnapshot",
          "ec2:volumeiops",
          "aws:requesttag/${tagkey}",
          "ec2:volumetype",
          "ec2:islaunchtemplateresource",
          "ec2:availabilityzone",
          "ec2:encrypted",
          "ec2:launchtemplate"
        ],
        "isRequired": true
      },
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:IsLaunchTemplateResource",
          "ec2:LaunchTemplate",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:islaunchtemplateresource",
          "ec2:public",
          "ec2:launchtemplate"
        ],
        "isRequired": true
      },
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:IsLaunchTemplateResource",
          "ec2:LaunchTemplate",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "aws:tagkeys",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:placementgroup",
          "aws:requesttag/${tagkey}",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:islaunchtemplateresource",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype",
          "ec2:launchtemplate"
        ],
        "isRequired": true
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:IsLaunchTemplateResource",
          "ec2:LaunchTemplate",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:islaunchtemplateresource",
          "ec2:securitygroupid",
          "ec2:launchtemplate"
        ],
        "isRequired": true
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AssociatePublicIpAddress",
          "ec2:AuthorizedService",
          "ec2:AvailabilityZone",
          "ec2:IsLaunchTemplateResource",
          "ec2:LaunchTemplate",
          "ec2:NetworkInterfaceID",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:tagkeys",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:authorizedservice",
          "aws:requesttag/${tagkey}",
          "ec2:islaunchtemplateresource",
          "ec2:availabilityzone",
          "ec2:launchtemplate",
          "ec2:associatepublicipaddress"
        ],
        "isRequired": true
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:IsLaunchTemplateResource",
          "ec2:LaunchTemplate",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:islaunchtemplateresource",
          "ec2:availabilityzone",
          "ec2:launchtemplate"
        ],
        "isRequired": true
      },
      {
        "Name": "group",
        "ARN": "arn:aws:resource-groups:${Region}:${Account}:group/${GroupName}",
        "RegEx": "^arn:aws:resource-groups:${Region}:${Account}:group/.+",
        "isRequired": false
      },
      {
        "Name": "elastic-gpu",
        "ARN": "arn:aws:ec2:${Region}:${Account}:elastic-gpu/${ElasticGpuId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ElasticGpuType",
          "ec2:IsLaunchTemplateResource",
          "ec2:LaunchTemplate",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:islaunchtemplateresource",
          "ec2:elasticgputype",
          "ec2:launchtemplate"
        ],
        "isRequired": false
      },
      {
        "Name": "placement-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:IsLaunchTemplateResource",
          "ec2:LaunchTemplate",
          "ec2:PlacementGroupName",
          "ec2:PlacementGroupStrategy",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:placementgroupname",
          "ec2:resourcetag/${tagkey}",
          "ec2:islaunchtemplateresource",
          "ec2:placementgroupstrategy",
          "ec2:launchtemplate"
        ],
        "isRequired": false
      },
      {
        "Name": "license-configuration",
        "ARN": "arn:aws:license-manager:${Region}:${Account}:license-configuration/${LicenseConfigurationId}",
        "RegEx": "^arn:aws:license-manager:.+",
        "isRequired": false
      },
      {
        "Name": "capacity-reservation",
        "ARN": "arn:aws:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:IsLaunchTemplateResource",
          "ec2:LaunchTemplate",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:islaunchtemplateresource",
          "ec2:launchtemplate"
        ],
        "isRequired": false
      },
      {
        "Name": "key-pair",
        "ARN": "arn:aws:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:IsLaunchTemplateResource",
          "ec2:KeyPairName",
          "ec2:KeyPairType",
          "ec2:LaunchTemplate",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:keypairname",
          "ec2:keypairtype",
          "ec2:resourcetag/${tagkey}",
          "ec2:islaunchtemplateresource",
          "ec2:launchtemplate"
        ],
        "isRequired": false
      },
      {
        "Name": "elastic-inference",
        "ARN": "arn:aws:elastic-inference:${Region}:${Account}:elastic-inference-accelerator/${ElasticInferenceAcceleratorId}",
        "RegEx": "^arn:aws:elastic-inference:.+",
        "isRequired": false
      },
      {
        "Name": "launch-template",
        "ARN": "arn:aws:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:IsLaunchTemplateResource",
          "ec2:LaunchTemplate",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}",
          "ec2:islaunchtemplateresource",
          "ec2:launchtemplate"
        ],
        "isRequired": false
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:IsLaunchTemplateResource",
          "ec2:LaunchTemplate",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:islaunchtemplateresource",
          "ec2:launchtemplate",
          "ec2:snapshotid"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [
      {
        "Name": "EC2-Classic-EBS",
        "RequiredResources": [
          "image",
          "instance",
          "security-group",
          "volume"
        ],
        "OptionalResources": [
          "key-pair",
          "placement-group",
          "snapshot"
        ],
        "Default": false
      },
      {
        "Name": "EC2-Classic-InstanceStore",
        "RequiredResources": [
          "image",
          "instance",
          "security-group"
        ],
        "OptionalResources": [
          "key-pair",
          "placement-group",
          "snapshot"
        ],
        "Default": false
      },
      {
        "Name": "EC2-VPC-EBS",
        "RequiredResources": [
          "image",
          "instance",
          "network-interface",
          "security-group",
          "volume"
        ],
        "OptionalResources": [
          "key-pair",
          "placement-group",
          "snapshot"
        ],
        "Default": false
      },
      {
        "Name": "EC2-VPC-EBS-Subnet",
        "RequiredResources": [
          "image",
          "instance",
          "network-interface",
          "security-group",
          "subnet",
          "volume"
        ],
        "OptionalResources": [
          "key-pair",
          "placement-group",
          "snapshot"
        ],
        "Default": true
      },
      {
        "Name": "EC2-VPC-InstanceStore",
        "RequiredResources": [
          "image",
          "instance",
          "network-interface",
          "security-group"
        ],
        "OptionalResources": [
          "key-pair",
          "placement-group",
          "snapshot"
        ],
        "Default": false
      },
      {
        "Name": "EC2-VPC-InstanceStore-Subnet",
        "RequiredResources": [
          "image",
          "instance",
          "network-interface",
          "security-group",
          "subnet"
        ],
        "OptionalResources": [
          "key-pair",
          "placement-group",
          "snapshot"
        ],
        "Default": false
      }
    ],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "RunScheduledInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "image"
    ],
    "supportedResources": [
      {
        "Name": "image",
        "ARN": "arn:aws:ec2:${Region}::image/${ImageId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ImageID",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:rootdevicetype",
          "ec2:imagetype",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:imageid",
          "ec2:public"
        ],
        "isRequired": true
      },
      {
        "Name": "snapshot",
        "ARN": "arn:aws:ec2:${Region}::snapshot/${SnapshotId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotID",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "ContextKeyStrings": [
          "ec2:parentvolume",
          "aws:resourcetag/${tagkey}",
          "ec2:volumesize",
          "ec2:owner",
          "ec2:resourcetag/${tagkey}",
          "ec2:snapshottime",
          "ec2:snapshotid"
        ],
        "isRequired": false
      },
      {
        "Name": "key-pair",
        "ARN": "arn:aws:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:KeyPairName",
          "ec2:KeyPairType",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:keypairname",
          "ec2:keypairtype",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AssociatePublicIpAddress",
          "ec2:AuthorizedService",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:authorizedservice",
          "ec2:availabilityzone",
          "ec2:associatepublicipaddress"
        ],
        "isRequired": false
      },
      {
        "Name": "placement-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:PlacementGroupName",
          "ec2:PlacementGroupStrategy",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:placementgroupname",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroupstrategy"
        ],
        "isRequired": false
      },
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": false
      },
      {
        "Name": "subnet",
        "ARN": "arn:aws:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SubnetID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:subnetid",
          "ec2:availabilityzone"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "SearchLocalGatewayRoutes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "local-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "SearchTransitGatewayMulticastGroups",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "SearchTransitGatewayRoutes",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "transit-gateway-route-table"
    ],
    "supportedResources": [
      {
        "Name": "transit-gateway-route-table",
        "ARN": "arn:aws:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "SendDiagnosticInterrupt",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "SendSpotInstanceInterruptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "StartInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:PlacementGroup",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:instanceprofile",
          "ec2:instancetype",
          "ec2:availabilityzone",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      },
      {
        "Name": "license-configuration",
        "ARN": "arn:aws:license-manager:${Region}:${Account}:license-configuration/${LicenseConfigurationId}",
        "RegEx": "^arn:aws:license-manager:.+",
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "StartNetworkInsightsAccessScopeAnalysis",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-insights-access-scope-analysis"
    ],
    "supportedResources": [
      {
        "Name": "network-insights-access-scope-analysis",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-access-scope-analysis/${NetworkInsightsAccessScopeAnalysisId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "network-insights-access-scope",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "StartNetworkInsightsAnalysis",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-insights-path",
      "network-insights-analysis"
    ],
    "supportedResources": [
      {
        "Name": "network-insights-path",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-path/${NetworkInsightsPathId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      },
      {
        "Name": "network-insights-analysis",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-insights-analysis/${NetworkInsightsAnalysisId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys"
        ],
        "ContextKeyStrings": [
          "aws:tagkeys",
          "aws:requesttag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "StartVpcEndpointServicePrivateDnsVerification",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "vpc-endpoint-service"
    ],
    "supportedResources": [
      {
        "Name": "vpc-endpoint-service",
        "ARN": "arn:aws:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "StopInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:PlacementGroup",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "ec2:tenancy",
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:instanceprofile",
          "ec2:instancetype",
          "ec2:availabilityzone",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "TerminateClientVpnConnections",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "client-vpn-endpoint"
    ],
    "supportedResources": [
      {
        "Name": "client-vpn-endpoint",
        "ARN": "arn:aws:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ClientRootCertificateChainArn",
          "ec2:CloudwatchLogGroupArn",
          "ec2:CloudwatchLogStreamArn",
          "ec2:DirectoryArn",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SamlProviderArn",
          "ec2:ServerCertificateArn"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:cloudwatchlogstreamarn",
          "ec2:resourcetag/${tagkey}",
          "ec2:clientrootcertificatechainarn",
          "ec2:cloudwatchloggrouparn",
          "ec2:samlproviderarn",
          "ec2:servercertificatearn",
          "ec2:directoryarn"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "TerminateInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "UnassignIpv6Addresses",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-interface"
    ],
    "supportedResources": [
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "UnassignPrivateIpAddresses",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "network-interface"
    ],
    "supportedResources": [
      {
        "Name": "network-interface",
        "ARN": "arn:aws:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:NetworkInterfaceID",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "ec2:networkinterfaceid",
          "aws:resourcetag/${tagkey}",
          "ec2:subnet",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:availabilityzone"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "UnmonitorInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "instance"
    ],
    "supportedResources": [
      {
        "Name": "instance",
        "ARN": "arn:aws:ec2:${Region}:${Account}:instance/${InstanceId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceAutoRecovery",
          "ec2:InstanceID",
          "ec2:InstanceMarketType",
          "ec2:InstanceMetadataTags",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:MetadataHttpEndpoint",
          "ec2:MetadataHttpPutResponseHopLimit",
          "ec2:MetadataHttpTokens",
          "ec2:PlacementGroup",
          "ec2:ProductCode",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:instanceid",
          "ec2:metadatahttpendpoint",
          "ec2:instanceautorecovery",
          "ec2:instancetype",
          "ec2:metadatahttptokens",
          "ec2:tenancy",
          "ec2:instancemetadatatags",
          "ec2:rootdevicetype",
          "ec2:resourcetag/${tagkey}",
          "ec2:placementgroup",
          "ec2:metadatahttpputresponsehoplimit",
          "ec2:instanceprofile",
          "ec2:availabilityzone",
          "ec2:productcode",
          "ec2:ebsoptimized",
          "ec2:instancemarkettype"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "UpdateSecurityGroupRuleDescriptionsEgress",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "security-group"
    ],
    "supportedResources": [
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "UpdateSecurityGroupRuleDescriptionsIngress",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "security-group"
    ],
    "supportedResources": [
      {
        "Name": "security-group",
        "ARN": "arn:aws:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "RegEx": "^arn:aws:ec2:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SecurityGroupID",
          "ec2:Vpc"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}",
          "ec2:vpc",
          "ec2:resourcetag/${tagkey}",
          "ec2:securitygroupid"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "ec2:Region",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys",
        "Description": "Filters access by the name of the AWS Region"
      }
    ]
  },
  {
    "name": "WithdrawByoipCidr",
    "evaluated": false,
    "allowed": false,
    "prefix": "ec2",
    "service": "Amazon EC2",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  }
]