[
  {
    "name": "BatchGetAggregateResourceConfig",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigurationAggregator"
    ],
    "supportedResources": [
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "BatchGetResourceConfig",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteAggregationAuthorization",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "AggregationAuthorization"
    ],
    "supportedResources": [
      {
        "Name": "AggregationAuthorization",
        "ARN": "arn:aws:config:${Region}:${Account}:aggregation-authorization/${AggregatorAccount}/${AggregatorRegion}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteConfigRule",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigRule"
    ],
    "supportedResources": [
      {
        "Name": "ConfigRule",
        "ARN": "arn:aws:config:${Region}:${Account}:config-rule/${ConfigRuleId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteConfigurationAggregator",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigurationAggregator"
    ],
    "supportedResources": [
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteConfigurationRecorder",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteConformancePack",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteDeliveryChannel",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteEvaluationResults",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigRule"
    ],
    "supportedResources": [
      {
        "Name": "ConfigRule",
        "ARN": "arn:aws:config:${Region}:${Account}:config-rule/${ConfigRuleId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteOrganizationConfigRule",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteOrganizationConformancePack",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeletePendingAggregationRequest",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteRemediationConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "RemediationConfiguration"
    ],
    "supportedResources": [
      {
        "Name": "RemediationConfiguration",
        "ARN": "arn:aws:config:${Region}:${Account}:remediation-configuration/${RemediationConfigurationId}",
        "RegEx": "^arn:aws:config:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteRemediationExceptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteResourceConfig",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteRetentionConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteStoredQuery",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "StoredQuery"
    ],
    "supportedResources": [
      {
        "Name": "StoredQuery",
        "ARN": "arn:aws:config:${Region}:${Account}:stored-query/${StoredQueryName}/${StoredQueryId}",
        "RegEx": "^arn:aws:config:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeliverConfigSnapshot",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeAggregateComplianceByConfigRules",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigurationAggregator"
    ],
    "supportedResources": [
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeAggregateComplianceByConformancePacks",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigurationAggregator"
    ],
    "supportedResources": [
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeAggregationAuthorizations",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeComplianceByConfigRule",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigRule"
    ],
    "supportedResources": [
      {
        "Name": "ConfigRule",
        "ARN": "arn:aws:config:${Region}:${Account}:config-rule/${ConfigRuleId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeComplianceByResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeConfigRuleEvaluationStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigRule"
    ],
    "supportedResources": [
      {
        "Name": "ConfigRule",
        "ARN": "arn:aws:config:${Region}:${Account}:config-rule/${ConfigRuleId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeConfigRules",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigRule"
    ],
    "supportedResources": [
      {
        "Name": "ConfigRule",
        "ARN": "arn:aws:config:${Region}:${Account}:config-rule/${ConfigRuleId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeConfigurationAggregatorSourcesStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigurationAggregator"
    ],
    "supportedResources": [
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeConfigurationAggregators",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeConfigurationRecorderStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeConfigurationRecorders",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeConformancePackCompliance",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeConformancePackStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeConformancePacks",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeDeliveryChannelStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeDeliveryChannels",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeOrganizationConfigRuleStatuses",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeOrganizationConfigRules",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeOrganizationConformancePackStatuses",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeOrganizationConformancePacks",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribePendingAggregationRequests",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeRemediationConfigurations",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "RemediationConfiguration"
    ],
    "supportedResources": [
      {
        "Name": "RemediationConfiguration",
        "ARN": "arn:aws:config:${Region}:${Account}:remediation-configuration/${RemediationConfigurationId}",
        "RegEx": "^arn:aws:config:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeRemediationExceptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DescribeRemediationExecutionStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "RemediationConfiguration"
    ],
    "supportedResources": [
      {
        "Name": "RemediationConfiguration",
        "ARN": "arn:aws:config:${Region}:${Account}:remediation-configuration/${RemediationConfigurationId}",
        "RegEx": "^arn:aws:config:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeRetentionConfigurations",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetAggregateComplianceDetailsByConfigRule",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigurationAggregator"
    ],
    "supportedResources": [
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetAggregateConfigRuleComplianceSummary",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigurationAggregator"
    ],
    "supportedResources": [
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetAggregateConformancePackComplianceSummary",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigurationAggregator"
    ],
    "supportedResources": [
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetAggregateDiscoveredResourceCounts",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigurationAggregator"
    ],
    "supportedResources": [
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetAggregateResourceConfig",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigurationAggregator"
    ],
    "supportedResources": [
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetComplianceDetailsByConfigRule",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigRule"
    ],
    "supportedResources": [
      {
        "Name": "ConfigRule",
        "ARN": "arn:aws:config:${Region}:${Account}:config-rule/${ConfigRuleId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetComplianceDetailsByResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetComplianceSummaryByConfigRule",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetComplianceSummaryByResourceType",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetConformancePackComplianceDetails",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetConformancePackComplianceSummary",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetDiscoveredResourceCounts",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetOrganizationConfigRuleDetailedStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetOrganizationConformancePackDetailedStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetResourceConfigHistory",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetStoredQuery",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "StoredQuery"
    ],
    "supportedResources": [
      {
        "Name": "StoredQuery",
        "ARN": "arn:aws:config:${Region}:${Account}:stored-query/${StoredQueryName}/${StoredQueryId}",
        "RegEx": "^arn:aws:config:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListAggregateDiscoveredResources",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigurationAggregator"
    ],
    "supportedResources": [
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListDiscoveredResources",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListStoredQueries",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "StoredQuery"
    ],
    "supportedResources": [
      {
        "Name": "StoredQuery",
        "ARN": "arn:aws:config:${Region}:${Account}:stored-query/${StoredQueryName}/${StoredQueryId}",
        "RegEx": "^arn:aws:config:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListTagsForResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ConfigRule",
        "ARN": "arn:aws:config:${Region}:${Account}:config-rule/${ConfigRuleId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "AggregationAuthorization",
        "ARN": "arn:aws:config:${Region}:${Account}:aggregation-authorization/${AggregatorAccount}/${AggregatorRegion}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "PutAggregationAuthorization",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "AggregationAuthorization"
    ],
    "supportedResources": [
      {
        "Name": "AggregationAuthorization",
        "ARN": "arn:aws:config:${Region}:${Account}:aggregation-authorization/${AggregatorAccount}/${AggregatorRegion}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters actions based on the allowed set of values for each of the tags"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters actions based on the presence of mandatory tags in the request"
      }
    ]
  },
  {
    "name": "PutConfigRule",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigRule"
    ],
    "supportedResources": [
      {
        "Name": "ConfigRule",
        "ARN": "arn:aws:config:${Region}:${Account}:config-rule/${ConfigRuleId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters actions based on the allowed set of values for each of the tags"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters actions based on the presence of mandatory tags in the request"
      }
    ]
  },
  {
    "name": "PutConfigurationAggregator",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigurationAggregator"
    ],
    "supportedResources": [
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters actions based on the allowed set of values for each of the tags"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters actions based on the presence of mandatory tags in the request"
      }
    ]
  },
  {
    "name": "PutConfigurationRecorder",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutConformancePack",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutDeliveryChannel",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutEvaluations",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutExternalEvaluation",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutOrganizationConfigRule",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutOrganizationConformancePack",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutRemediationConfigurations",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "RemediationConfiguration"
    ],
    "supportedResources": [
      {
        "Name": "RemediationConfiguration",
        "ARN": "arn:aws:config:${Region}:${Account}:remediation-configuration/${RemediationConfigurationId}",
        "RegEx": "^arn:aws:config:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "PutRemediationExceptions",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutResourceConfig",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutRetentionConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutStoredQuery",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "StoredQuery"
    ],
    "supportedResources": [
      {
        "Name": "StoredQuery",
        "ARN": "arn:aws:config:${Region}:${Account}:stored-query/${StoredQueryName}/${StoredQueryId}",
        "RegEx": "^arn:aws:config:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters actions based on the allowed set of values for each of the tags"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters actions based on the presence of mandatory tags in the request"
      }
    ]
  },
  {
    "name": "SelectAggregateResourceConfig",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "SelectResourceConfig",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "StartConfigRulesEvaluation",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "ConfigRule"
    ],
    "supportedResources": [
      {
        "Name": "ConfigRule",
        "ARN": "arn:aws:config:${Region}:${Account}:config-rule/${ConfigRuleId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StartConfigurationRecorder",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "StartRemediationExecution",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "RemediationConfiguration"
    ],
    "supportedResources": [
      {
        "Name": "RemediationConfiguration",
        "ARN": "arn:aws:config:${Region}:${Account}:remediation-configuration/${RemediationConfigurationId}",
        "RegEx": "^arn:aws:config:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StopConfigurationRecorder",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "TagResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ConfigRule",
        "ARN": "arn:aws:config:${Region}:${Account}:config-rule/${ConfigRuleId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "AggregationAuthorization",
        "ARN": "arn:aws:config:${Region}:${Account}:aggregation-authorization/${AggregatorAccount}/${AggregatorRegion}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ConformancePack",
        "ARN": "arn:aws:config:${Region}:${Account}:conformance-pack/${ConformancePackName}/${ConformancePackId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters actions based on the allowed set of values for each of the tags"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters actions based on the presence of mandatory tags in the request"
      }
    ]
  },
  {
    "name": "UntagResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "config",
    "service": "AWS Config",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ConfigRule",
        "ARN": "arn:aws:config:${Region}:${Account}:config-rule/${ConfigRuleId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ConfigurationAggregator",
        "ARN": "arn:aws:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "AggregationAuthorization",
        "ARN": "arn:aws:config:${Region}:${Account}:aggregation-authorization/${AggregatorAccount}/${AggregatorRegion}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      },
      {
        "Name": "ConformancePack",
        "ARN": "arn:aws:config:${Region}:${Account}:conformance-pack/${ConformancePackName}/${ConformancePackId}",
        "RegEx": "^arn:aws:config:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters actions based on the presence of mandatory tags in the request"
      }
    ]
  }
]