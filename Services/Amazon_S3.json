[
  {
    "name": "AbortMultipartUpload",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "BypassGovernanceRetention",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:x-amz-copy-source",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#putobject-limit-copy-source-3",
        "Description": "Filters access by copy source bucket, prefix, or object in the copy object requests"
      },
      {
        "Name": "s3:RequestObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by the tag keys and values to be added to objects"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:object-lock-remaining-retention-days",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-retention-limits",
        "DocPage": "${ConceptsDocRoot}object-lock-managing.html#object-lock-managing-retention-limits",
        "Description": "Filters access by remaining object retention days"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:object-lock-legal-hold",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-overview.html#object-lock-legal-holds",
        "DocPage": "${ConceptsDocRoot}object-lock-overview.html#object-lock-legal-holds",
        "Description": "Filters access by object legal hold status"
      },
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:RequestObjectTagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by the tag keys to be added to objects"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:x-amz-grant-write",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-write (write access) header"
      },
      {
        "Name": "s3:x-amz-grant-full-control",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by x-amz-grant-full-control (full control) header"
      },
      {
        "Name": "s3:object-lock-retain-until-date",
        "Type": "Date",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-overview.html#object-lock-retention-periods",
        "DocPage": "${ConceptsDocRoot}object-lock-overview.html#object-lock-retention-periods",
        "Description": "Filters access by object retain-until date"
      },
      {
        "Name": "s3:x-amz-server-side-encryption-aws-kms-key-id",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html#require-sse-kms",
        "DocPage": "${ConceptsDocRoot}UsingKMSEncryption.html#require-sse-kms",
        "Description": "Filters access by AWS KMS customer managed CMK for server-side encryption"
      },
      {
        "Name": "s3:x-amz-website-redirect-location",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/how-to-page-redirect.html#page-redirect-using-rest-api",
        "DocPage": "${ConceptsDocRoot}how-to-page-redirect.html#page-redirect-using-rest-api",
        "Description": "Filters access by a specific website redirect location for buckets that are configured as static websites"
      },
      {
        "Name": "s3:x-amz-server-side-encryption",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingServerSideEncryption.html",
        "DocPage": "${ConceptsDocRoot}UsingServerSideEncryption.html",
        "Description": "Filters access by server-side encryption"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:x-amz-grant-read",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by x-amz-grant-read (read access) header"
      },
      {
        "Name": "s3:object-lock-mode",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-overview.html#object-lock-retention-modes",
        "DocPage": "${ConceptsDocRoot}object-lock-overview.html#object-lock-retention-modes",
        "Description": "Filters access by object retention mode (COMPLIANCE or GOVERNANCE)"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:x-amz-acl",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by canned ACL in the request\u0027s x-amz-acl header"
      },
      {
        "Name": "s3:x-amz-grant-read-acp",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-read-acp (read permissions for the ACL) header"
      },
      {
        "Name": "s3:x-amz-metadata-directive",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html",
        "DocPage": "${ActionsDocRoot}API_CopyObject.html",
        "Description": "Filters access by object metadata behavior (COPY or REPLACE) when objects are copied"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-grant-write-acp",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-write-acp (write permissions for the ACL) header"
      },
      {
        "Name": "s3:x-amz-storage-class",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-class-intro.html#sc-howtoset",
        "DocPage": "${ConceptsDocRoot}storage-class-intro.html#sc-howtoset",
        "Description": "Filters access by storage class"
      }
    ]
  },
  {
    "name": "CreateAccessPoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "accesspoint"
    ],
    "supportedResources": [
      {
        "Name": "accesspoint",
        "ARN": "arn:aws:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:x-amz-acl",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by canned ACL in the request\u0027s x-amz-acl header"
      },
      {
        "Name": "s3:locationconstraint",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#condition-key-bucket-ops-1",
        "Description": "Filters access by a specific Region"
      }
    ]
  },
  {
    "name": "CreateAccessPointForObjectLambda",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "objectlambdaaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "objectlambdaaccesspoint",
        "ARN": "arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "CreateBucket",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:x-amz-object-ownership",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/ensure-object-ownership.html#object-ownership-requiring-bucket-owner-enforced",
        "DocPage": "${ConceptsDocRoot}ensure-object-ownership.html#object-ownership-requiring-bucket-owner-enforced",
        "Description": "Filters access by Object Ownership"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:x-amz-grant-read",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by x-amz-grant-read (read access) header"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:x-amz-acl",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by canned ACL in the request\u0027s x-amz-acl header"
      },
      {
        "Name": "s3:x-amz-grant-read-acp",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-read-acp (read permissions for the ACL) header"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-grant-write-acp",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-write-acp (write permissions for the ACL) header"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:x-amz-grant-write",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-write (write access) header"
      },
      {
        "Name": "s3:x-amz-grant-full-control",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by x-amz-grant-full-control (full control) header"
      },
      {
        "Name": "s3:locationconstraint",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#condition-key-bucket-ops-1",
        "Description": "Filters access by a specific Region"
      }
    ]
  },
  {
    "name": "CreateJob",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateMultiRegionAccessPoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "multiregionaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "multiregionaccesspoint",
        "ARN": "arn:aws:s3::${Account}:accesspoint/${AccessPointAlias}",
        "RegEx": "^arn:aws:s3::${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DeleteAccessPoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "accesspoint"
    ],
    "supportedResources": [
      {
        "Name": "accesspoint",
        "ARN": "arn:aws:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DeleteAccessPointForObjectLambda",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "objectlambdaaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "objectlambdaaccesspoint",
        "ARN": "arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DeleteAccessPointPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "accesspoint"
    ],
    "supportedResources": [
      {
        "Name": "accesspoint",
        "ARN": "arn:aws:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DeleteAccessPointPolicyForObjectLambda",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "objectlambdaaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "objectlambdaaccesspoint",
        "ARN": "arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DeleteBucket",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DeleteBucketPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DeleteBucketWebsite",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DeleteJobTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "job"
    ],
    "supportedResources": [
      {
        "Name": "job",
        "ARN": "arn:aws:s3:${Region}:${Account}:job/${JobId}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:job/.+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:ExistingJobOperation",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html",
        "DocPage": "${ConceptsDocRoot}batch-ops-job-tags-examples.html",
        "Description": "Filters access by operation to updating the job priority"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "aws:ResourceTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "Description": "Filters access by the tags associated with the resource"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:ExistingJobPriority",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html",
        "DocPage": "${ConceptsDocRoot}batch-ops-job-tags-examples.html",
        "Description": "Filters access by priority range to cancelling existing jobs"
      }
    ]
  },
  {
    "name": "DeleteMultiRegionAccessPoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "multiregionaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "multiregionaccesspoint",
        "ARN": "arn:aws:s3::${Account}:accesspoint/${AccessPointAlias}",
        "RegEx": "^arn:aws:s3::${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DeleteObject",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DeleteObjectTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DeleteObjectVersion",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:versionid",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#getobjectversion-limit-access-to-specific-version-3",
        "Description": "Filters access by a specific object version"
      }
    ]
  },
  {
    "name": "DeleteObjectVersionTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:versionid",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#getobjectversion-limit-access-to-specific-version-3",
        "Description": "Filters access by a specific object version"
      }
    ]
  },
  {
    "name": "DeleteStorageLensConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "storagelensconfiguration"
    ],
    "supportedResources": [
      {
        "Name": "storagelensconfiguration",
        "ARN": "arn:aws:s3:${Region}:${Account}:storage-lens/${ConfigId}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:storage-lens/[^/]+$",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DeleteStorageLensConfigurationTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "storagelensconfiguration"
    ],
    "supportedResources": [
      {
        "Name": "storagelensconfiguration",
        "ARN": "arn:aws:s3:${Region}:${Account}:storage-lens/${ConfigId}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:storage-lens/[^/]+$",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "aws:ResourceTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "Description": "Filters access by the tags associated with the resource"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DescribeJob",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "job"
    ],
    "supportedResources": [
      {
        "Name": "job",
        "ARN": "arn:aws:s3:${Region}:${Account}:job/${JobId}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:job/.+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "DescribeMultiRegionAccessPointOperation",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "multiregionaccesspointrequestarn"
    ],
    "supportedResources": [
      {
        "Name": "multiregionaccesspointrequestarn",
        "ARN": "arn:aws:s3:us-west-2:${Account}:async-request/mrap/${Operation}/${Token}",
        "RegEx": "^arn:aws:s3:us-west-2:${Account}:async-request/mrap/[^/]+/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetAccelerateConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetAccessPoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetAccessPointConfigurationForObjectLambda",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "objectlambdaaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "objectlambdaaccesspoint",
        "ARN": "arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetAccessPointForObjectLambda",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "objectlambdaaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "objectlambdaaccesspoint",
        "ARN": "arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetAccessPointPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "accesspoint"
    ],
    "supportedResources": [
      {
        "Name": "accesspoint",
        "ARN": "arn:aws:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetAccessPointPolicyForObjectLambda",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "objectlambdaaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "objectlambdaaccesspoint",
        "ARN": "arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetAccessPointPolicyStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "accesspoint"
    ],
    "supportedResources": [
      {
        "Name": "accesspoint",
        "ARN": "arn:aws:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetAccessPointPolicyStatusForObjectLambda",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "objectlambdaaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "objectlambdaaccesspoint",
        "ARN": "arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetAccountPublicAccessBlock",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetAnalyticsConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketAcl",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketCORS",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketLocation",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketLogging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketNotification",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketObjectLockConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketOwnershipControls",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketPolicyStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketPublicAccessBlock",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketRequestPayment",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketVersioning",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetBucketWebsite",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetEncryptionConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetIntelligentTieringConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetInventoryConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetJobTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "job"
    ],
    "supportedResources": [
      {
        "Name": "job",
        "ARN": "arn:aws:s3:${Region}:${Account}:job/${JobId}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:job/.+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetLifecycleConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetMetricsConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetMultiRegionAccessPoint",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "multiregionaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "multiregionaccesspoint",
        "ARN": "arn:aws:s3::${Account}:accesspoint/${AccessPointAlias}",
        "RegEx": "^arn:aws:s3::${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetMultiRegionAccessPointPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "multiregionaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "multiregionaccesspoint",
        "ARN": "arn:aws:s3::${Account}:accesspoint/${AccessPointAlias}",
        "RegEx": "^arn:aws:s3::${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetMultiRegionAccessPointPolicyStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "multiregionaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "multiregionaccesspoint",
        "ARN": "arn:aws:s3::${Account}:accesspoint/${AccessPointAlias}",
        "RegEx": "^arn:aws:s3::${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetObject",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetObjectAcl",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetObjectAttributes",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetObjectLegalHold",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetObjectRetention",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetObjectTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetObjectTorrent",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetObjectVersion",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:versionid",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#getobjectversion-limit-access-to-specific-version-3",
        "Description": "Filters access by a specific object version"
      }
    ]
  },
  {
    "name": "GetObjectVersionAcl",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:versionid",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#getobjectversion-limit-access-to-specific-version-3",
        "Description": "Filters access by a specific object version"
      }
    ]
  },
  {
    "name": "GetObjectVersionAttributes",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:versionid",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#getobjectversion-limit-access-to-specific-version-3",
        "Description": "Filters access by a specific object version"
      }
    ]
  },
  {
    "name": "GetObjectVersionForReplication",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetObjectVersionTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:versionid",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#getobjectversion-limit-access-to-specific-version-3",
        "Description": "Filters access by a specific object version"
      }
    ]
  },
  {
    "name": "GetObjectVersionTorrent",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:versionid",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#getobjectversion-limit-access-to-specific-version-3",
        "Description": "Filters access by a specific object version"
      }
    ]
  },
  {
    "name": "GetReplicationConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetStorageLensConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "storagelensconfiguration"
    ],
    "supportedResources": [
      {
        "Name": "storagelensconfiguration",
        "ARN": "arn:aws:s3:${Region}:${Account}:storage-lens/${ConfigId}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:storage-lens/[^/]+$",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetStorageLensConfigurationTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "storagelensconfiguration"
    ],
    "supportedResources": [
      {
        "Name": "storagelensconfiguration",
        "ARN": "arn:aws:s3:${Region}:${Account}:storage-lens/${ConfigId}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:storage-lens/[^/]+$",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "GetStorageLensDashboard",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "storagelensconfiguration"
    ],
    "supportedResources": [
      {
        "Name": "storagelensconfiguration",
        "ARN": "arn:aws:s3:${Region}:${Account}:storage-lens/${ConfigId}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:storage-lens/[^/]+$",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "InitiateReplication",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      }
    ]
  },
  {
    "name": "ListAccessPoints",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListAccessPointsForObjectLambda",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListAllMyBuckets",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListBucket",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:delimiter",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/walkthrough1.html",
        "DocPage": "${ConceptsDocRoot}walkthrough1.html",
        "Description": "Filters access by delimiter parameter"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:max-keys",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-numeric-condition-operators",
        "Description": "Filters access by maximum number of keys returned in a ListBucket request"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:prefix",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#condition-key-bucket-ops-2",
        "Description": "Filters access by key name prefix"
      }
    ]
  },
  {
    "name": "ListBucketMultipartUploads",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "ListBucketVersions",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:delimiter",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/walkthrough1.html",
        "DocPage": "${ConceptsDocRoot}walkthrough1.html",
        "Description": "Filters access by delimiter parameter"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:max-keys",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-numeric-condition-operators",
        "Description": "Filters access by maximum number of keys returned in a ListBucket request"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:prefix",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#condition-key-bucket-ops-2",
        "Description": "Filters access by key name prefix"
      }
    ]
  },
  {
    "name": "ListJobs",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListMultiRegionAccessPoints",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListMultipartUploadParts",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "ListStorageLensConfigurations",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ObjectOwnerOverrideToBucketOwner",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutAccelerateConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutAccessPointConfigurationForObjectLambda",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "objectlambdaaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "objectlambdaaccesspoint",
        "ARN": "arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutAccessPointPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "accesspoint"
    ],
    "supportedResources": [
      {
        "Name": "accesspoint",
        "ARN": "arn:aws:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutAccessPointPolicyForObjectLambda",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "objectlambdaaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "objectlambdaaccesspoint",
        "ARN": "arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
        "RegEx": "^arn:aws:s3-object-lambda:${Region}:${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutAccessPointPublicAccessBlock",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutAccountPublicAccessBlock",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutAnalyticsConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutBucketAcl",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:x-amz-grant-write-acp",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-write-acp (write permissions for the ACL) header"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:x-amz-grant-read",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by x-amz-grant-read (read access) header"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:x-amz-grant-write",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-write (write access) header"
      },
      {
        "Name": "s3:x-amz-grant-full-control",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by x-amz-grant-full-control (full control) header"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:x-amz-acl",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by canned ACL in the request\u0027s x-amz-acl header"
      },
      {
        "Name": "s3:x-amz-grant-read-acp",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-read-acp (read permissions for the ACL) header"
      }
    ]
  },
  {
    "name": "PutBucketCORS",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutBucketLogging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutBucketNotification",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutBucketObjectLockConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutBucketOwnershipControls",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutBucketPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutBucketPublicAccessBlock",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutBucketRequestPayment",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutBucketTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutBucketVersioning",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutBucketWebsite",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutEncryptionConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutIntelligentTieringConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutInventoryConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutJobTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "job"
    ],
    "supportedResources": [
      {
        "Name": "job",
        "ARN": "arn:aws:s3:${Region}:${Account}:job/${JobId}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:job/.+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:ExistingJobOperation",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html",
        "DocPage": "${ConceptsDocRoot}batch-ops-job-tags-examples.html",
        "Description": "Filters access by operation to updating the job priority"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the tag keys that are passed in the request"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the tags that are passed in the request"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "aws:ResourceTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "Description": "Filters access by the tags associated with the resource"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:ExistingJobPriority",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html",
        "DocPage": "${ConceptsDocRoot}batch-ops-job-tags-examples.html",
        "Description": "Filters access by priority range to cancelling existing jobs"
      }
    ]
  },
  {
    "name": "PutLifecycleConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutMetricsConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutMultiRegionAccessPointPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "multiregionaccesspoint"
    ],
    "supportedResources": [
      {
        "Name": "multiregionaccesspoint",
        "ARN": "arn:aws:s3::${Account}:accesspoint/${AccessPointAlias}",
        "RegEx": "^arn:aws:s3::${Account}:accesspoint/[^/]+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutObject",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:x-amz-copy-source",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#putobject-limit-copy-source-3",
        "Description": "Filters access by copy source bucket, prefix, or object in the copy object requests"
      },
      {
        "Name": "s3:RequestObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by the tag keys and values to be added to objects"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:object-lock-remaining-retention-days",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-retention-limits",
        "DocPage": "${ConceptsDocRoot}object-lock-managing.html#object-lock-managing-retention-limits",
        "Description": "Filters access by remaining object retention days"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:object-lock-legal-hold",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-overview.html#object-lock-legal-holds",
        "DocPage": "${ConceptsDocRoot}object-lock-overview.html#object-lock-legal-holds",
        "Description": "Filters access by object legal hold status"
      },
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:RequestObjectTagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by the tag keys to be added to objects"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:x-amz-grant-write",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-write (write access) header"
      },
      {
        "Name": "s3:x-amz-grant-full-control",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by x-amz-grant-full-control (full control) header"
      },
      {
        "Name": "s3:object-lock-retain-until-date",
        "Type": "Date",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-overview.html#object-lock-retention-periods",
        "DocPage": "${ConceptsDocRoot}object-lock-overview.html#object-lock-retention-periods",
        "Description": "Filters access by object retain-until date"
      },
      {
        "Name": "s3:x-amz-server-side-encryption-aws-kms-key-id",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html#require-sse-kms",
        "DocPage": "${ConceptsDocRoot}UsingKMSEncryption.html#require-sse-kms",
        "Description": "Filters access by AWS KMS customer managed CMK for server-side encryption"
      },
      {
        "Name": "s3:x-amz-website-redirect-location",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/how-to-page-redirect.html#page-redirect-using-rest-api",
        "DocPage": "${ConceptsDocRoot}how-to-page-redirect.html#page-redirect-using-rest-api",
        "Description": "Filters access by a specific website redirect location for buckets that are configured as static websites"
      },
      {
        "Name": "s3:x-amz-server-side-encryption",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingServerSideEncryption.html",
        "DocPage": "${ConceptsDocRoot}UsingServerSideEncryption.html",
        "Description": "Filters access by server-side encryption"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:x-amz-grant-read",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by x-amz-grant-read (read access) header"
      },
      {
        "Name": "s3:object-lock-mode",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-overview.html#object-lock-retention-modes",
        "DocPage": "${ConceptsDocRoot}object-lock-overview.html#object-lock-retention-modes",
        "Description": "Filters access by object retention mode (COMPLIANCE or GOVERNANCE)"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:x-amz-acl",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by canned ACL in the request\u0027s x-amz-acl header"
      },
      {
        "Name": "s3:x-amz-grant-read-acp",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-read-acp (read permissions for the ACL) header"
      },
      {
        "Name": "s3:x-amz-metadata-directive",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html",
        "DocPage": "${ActionsDocRoot}API_CopyObject.html",
        "Description": "Filters access by object metadata behavior (COPY or REPLACE) when objects are copied"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-grant-write-acp",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-write-acp (write permissions for the ACL) header"
      },
      {
        "Name": "s3:x-amz-storage-class",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-class-intro.html#sc-howtoset",
        "DocPage": "${ConceptsDocRoot}storage-class-intro.html#sc-howtoset",
        "Description": "Filters access by storage class"
      }
    ]
  },
  {
    "name": "PutObjectAcl",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:x-amz-grant-read",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by x-amz-grant-read (read access) header"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:x-amz-acl",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by canned ACL in the request\u0027s x-amz-acl header"
      },
      {
        "Name": "s3:x-amz-grant-read-acp",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-read-acp (read permissions for the ACL) header"
      },
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-grant-write-acp",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-write-acp (write permissions for the ACL) header"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      },
      {
        "Name": "s3:x-amz-storage-class",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-class-intro.html#sc-howtoset",
        "DocPage": "${ConceptsDocRoot}storage-class-intro.html#sc-howtoset",
        "Description": "Filters access by storage class"
      },
      {
        "Name": "s3:x-amz-grant-write",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-write (write access) header"
      },
      {
        "Name": "s3:x-amz-grant-full-control",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by x-amz-grant-full-control (full control) header"
      }
    ]
  },
  {
    "name": "PutObjectLegalHold",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:object-lock-legal-hold",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-overview.html#object-lock-legal-holds",
        "DocPage": "${ConceptsDocRoot}object-lock-overview.html#object-lock-legal-holds",
        "Description": "Filters access by object legal hold status"
      }
    ]
  },
  {
    "name": "PutObjectRetention",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:object-lock-mode",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-overview.html#object-lock-retention-modes",
        "DocPage": "${ConceptsDocRoot}object-lock-overview.html#object-lock-retention-modes",
        "Description": "Filters access by object retention mode (COMPLIANCE or GOVERNANCE)"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:object-lock-remaining-retention-days",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-retention-limits",
        "DocPage": "${ConceptsDocRoot}object-lock-managing.html#object-lock-managing-retention-limits",
        "Description": "Filters access by remaining object retention days"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:object-lock-retain-until-date",
        "Type": "Date",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-overview.html#object-lock-retention-periods",
        "DocPage": "${ConceptsDocRoot}object-lock-overview.html#object-lock-retention-periods",
        "Description": "Filters access by object retain-until date"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutObjectTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:RequestObjectTagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by the tag keys to be added to objects"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:RequestObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by the tag keys and values to be added to objects"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutObjectVersionAcl",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:x-amz-grant-read",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by x-amz-grant-read (read access) header"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:x-amz-acl",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by canned ACL in the request\u0027s x-amz-acl header"
      },
      {
        "Name": "s3:x-amz-grant-read-acp",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-read-acp (read permissions for the ACL) header"
      },
      {
        "Name": "s3:versionid",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#getobjectversion-limit-access-to-specific-version-3",
        "Description": "Filters access by a specific object version"
      },
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-grant-write-acp",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-write-acp (write permissions for the ACL) header"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      },
      {
        "Name": "s3:x-amz-storage-class",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-class-intro.html#sc-howtoset",
        "DocPage": "${ConceptsDocRoot}storage-class-intro.html#sc-howtoset",
        "Description": "Filters access by storage class"
      },
      {
        "Name": "s3:x-amz-grant-write",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by the x-amz-grant-write (write access) header"
      },
      {
        "Name": "s3:x-amz-grant-full-control",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions",
        "DocPage": "${ConceptsDocRoot}acl-overview.html#permissions",
        "Description": "Filters access by x-amz-grant-full-control (full control) header"
      }
    ]
  },
  {
    "name": "PutObjectVersionTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:RequestObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by the tag keys and values to be added to objects"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:versionid",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#getobjectversion-limit-access-to-specific-version-3",
        "Description": "Filters access by a specific object version"
      },
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:RequestObjectTagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by the tag keys to be added to objects"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:ExistingObjectTag/\u003ckey\u003e",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies",
        "DocPage": "${ConceptsDocRoot}object-tagging.html#tagging-and-policies",
        "Description": "Filters access by existing object tag key and value"
      }
    ]
  },
  {
    "name": "PutReplicationConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "bucket"
    ],
    "supportedResources": [
      {
        "Name": "bucket",
        "ARN": "arn:aws:s3:::${BucketName}",
        "RegEx": "^arn:aws:s3:((::[^/]+)|(${Region}:${Account}:accesspoint/[^/]+)|(:${Account}:accesspoint/[^/]+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "PutStorageLensConfiguration",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "PutStorageLensConfigurationTagging",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "storagelensconfiguration"
    ],
    "supportedResources": [
      {
        "Name": "storagelensconfiguration",
        "ARN": "arn:aws:s3:${Region}:${Account}:storage-lens/${ConfigId}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:storage-lens/[^/]+$",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the tag keys that are passed in the request"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the tags that are passed in the request"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "aws:ResourceTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "Description": "Filters access by the tags associated with the resource"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "ReplicateDelete",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "ReplicateObject",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:x-amz-server-side-encryption",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingServerSideEncryption.html",
        "DocPage": "${ConceptsDocRoot}UsingServerSideEncryption.html",
        "Description": "Filters access by server-side encryption"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:x-amz-server-side-encryption-aws-kms-key-id",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html#require-sse-kms",
        "DocPage": "${ConceptsDocRoot}UsingKMSEncryption.html#require-sse-kms",
        "Description": "Filters access by AWS KMS customer managed CMK for server-side encryption"
      }
    ]
  },
  {
    "name": "ReplicateTags",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "RestoreObject",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:s3:::${BucketName}/${ObjectName}",
        "RegEx": "^arn:aws:s3:((::.+)|(${Region}:${Account}:accesspoint/[^/]+/object/.+)|(:${Account}:accesspoint/[^/]+/object/.+))$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:DataAccessPointArn",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by an access point Amazon Resource Name (ARN)"
      },
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:DataAccessPointAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the AWS Account ID that owns the access point"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "s3:AccessPointNetworkOrigin",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies",
        "DocPage": "${ConceptsDocRoot}creating-access-points.html#access-points-policies",
        "Description": "Filters access by the network origin (Internet or VPC)"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      }
    ]
  },
  {
    "name": "UpdateJobPriority",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "job"
    ],
    "supportedResources": [
      {
        "Name": "job",
        "ARN": "arn:aws:s3:${Region}:${Account}:job/${JobId}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:job/.+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:ExistingJobOperation",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html",
        "DocPage": "${ConceptsDocRoot}batch-ops-job-tags-examples.html",
        "Description": "Filters access by operation to updating the job priority"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "aws:ResourceTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "Description": "Filters access by the tags associated with the resource"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:RequestJobPriority",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html",
        "DocPage": "${ConceptsDocRoot}batch-ops-job-tags-examples.html",
        "Description": "Filters access by priority range to creating new jobs"
      },
      {
        "Name": "s3:ExistingJobPriority",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html",
        "DocPage": "${ConceptsDocRoot}batch-ops-job-tags-examples.html",
        "Description": "Filters access by priority range to cancelling existing jobs"
      }
    ]
  },
  {
    "name": "UpdateJobStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "s3",
    "service": "Amazon S3",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "job"
    ],
    "supportedResources": [
      {
        "Name": "job",
        "ARN": "arn:aws:s3:${Region}:${Account}:job/${JobId}",
        "RegEx": "^arn:aws:s3:${Region}:${Account}:job/.+$",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "s3:signatureAge",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the age in milliseconds of the request signature"
      },
      {
        "Name": "s3:x-amz-content-sha256",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by unsigned content in your bucket"
      },
      {
        "Name": "s3:ExistingJobOperation",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html",
        "DocPage": "${ConceptsDocRoot}batch-ops-job-tags-examples.html",
        "Description": "Filters access by operation to updating the job priority"
      },
      {
        "Name": "s3:JobSuspendedCause",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html",
        "DocPage": "${ConceptsDocRoot}batch-ops-job-tags-examples.html",
        "Description": "Filters access by a specific job suspended cause (for example, AWAITING_CONFIRMATION) to cancelling suspended jobs"
      },
      {
        "Name": "s3:signatureversion",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by the version of AWS Signature used on the request"
      },
      {
        "Name": "s3:ResourceAccount",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account",
        "Description": "Filters access by the resource owner AWS account ID"
      },
      {
        "Name": "s3:authType",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html",
        "DocPage": "${ActionsDocRoot}bucket-policy-s3-sigv4-conditions.html",
        "Description": "Filters access by authentication method"
      },
      {
        "Name": "aws:ResourceTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "Description": "Filters access by the tags associated with the resource"
      },
      {
        "Name": "s3:TlsVersion",
        "Type": "Numeric",
        "DocPageRel": "#example-object-tls-version",
        "DocPage": "#example-object-tls-version",
        "Description": "Filters access by the TLS version used by the client"
      },
      {
        "Name": "s3:ExistingJobPriority",
        "Type": "Numeric",
        "DocPageRel": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html",
        "DocPage": "${ConceptsDocRoot}batch-ops-job-tags-examples.html",
        "Description": "Filters access by priority range to cancelling existing jobs"
      }
    ]
  }
]