[
  {
    "name": "ActivateKeySigningKey",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "AssociateVPCWithHostedZone",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ChangeCidrCollection",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cidrcollection"
    ],
    "supportedResources": [
      {
        "Name": "cidrcollection",
        "ARN": "arn:aws:route53:::cidrcollection/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ChangeResourceRecordSets",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ChangeTagsForResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone",
      "healthcheck"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      },
      {
        "Name": "healthcheck",
        "ARN": "arn:aws:route53:::healthcheck/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "CreateCidrCollection",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "noResourceARN": "arn:aws:route53:::cidrcollection/*",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateHealthCheck",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "noResourceARN": "arn:aws:route53:::healthcheck/*",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateHostedZone",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "noResourceARN": "arn:aws:route53::$account:hostedzone/*",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateKeySigningKey",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "CreateQueryLoggingConfig",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "CreateReusableDelegationSet",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "noResourceARN": "arn:aws:route53::$account:delegationset/*",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateTrafficPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "noResourceARN": "arn:aws:route53::$account:trafficpolicy/*",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateTrafficPolicyInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "trafficpolicy",
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "trafficpolicy",
        "ARN": "arn:aws:route53:::trafficpolicy/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      },
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "CreateTrafficPolicyVersion",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "trafficpolicy"
    ],
    "supportedResources": [
      {
        "Name": "trafficpolicy",
        "ARN": "arn:aws:route53:::trafficpolicy/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "CreateVPCAssociationAuthorization",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeactivateKeySigningKey",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteCidrCollection",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cidrcollection"
    ],
    "supportedResources": [
      {
        "Name": "cidrcollection",
        "ARN": "arn:aws:route53:::cidrcollection/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteHealthCheck",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "healthcheck"
    ],
    "supportedResources": [
      {
        "Name": "healthcheck",
        "ARN": "arn:aws:route53:::healthcheck/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteHostedZone",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteKeySigningKey",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteQueryLoggingConfig",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "queryloggingconfig"
    ],
    "supportedResources": [
      {
        "Name": "queryloggingconfig",
        "ARN": "arn:aws:route53:::queryloggingconfig/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteReusableDelegationSet",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "delegationset"
    ],
    "supportedResources": [
      {
        "Name": "delegationset",
        "ARN": "arn:aws:route53:::delegationset/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteTrafficPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "trafficpolicy"
    ],
    "supportedResources": [
      {
        "Name": "trafficpolicy",
        "ARN": "arn:aws:route53:::trafficpolicy/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteTrafficPolicyInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "trafficpolicyinstance"
    ],
    "supportedResources": [
      {
        "Name": "trafficpolicyinstance",
        "ARN": "arn:aws:route53:::trafficpolicyinstance/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteVPCAssociationAuthorization",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DisableHostedZoneDNSSEC",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DisassociateVPCFromHostedZone",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "EnableHostedZoneDNSSEC",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetAccountLimit",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetChange",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "change"
    ],
    "supportedResources": [
      {
        "Name": "change",
        "ARN": "arn:aws:route53:::change/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetCheckerIpRanges",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetDNSSEC",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetGeoLocation",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetHealthCheck",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "healthcheck"
    ],
    "supportedResources": [
      {
        "Name": "healthcheck",
        "ARN": "arn:aws:route53:::healthcheck/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetHealthCheckCount",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetHealthCheckLastFailureReason",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "healthcheck"
    ],
    "supportedResources": [
      {
        "Name": "healthcheck",
        "ARN": "arn:aws:route53:::healthcheck/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetHealthCheckStatus",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "healthcheck"
    ],
    "supportedResources": [
      {
        "Name": "healthcheck",
        "ARN": "arn:aws:route53:::healthcheck/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetHostedZone",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetHostedZoneCount",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "GetHostedZoneLimit",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetQueryLoggingConfig",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "queryloggingconfig"
    ],
    "supportedResources": [
      {
        "Name": "queryloggingconfig",
        "ARN": "arn:aws:route53:::queryloggingconfig/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetReusableDelegationSet",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "delegationset"
    ],
    "supportedResources": [
      {
        "Name": "delegationset",
        "ARN": "arn:aws:route53:::delegationset/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetReusableDelegationSetLimit",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "delegationset"
    ],
    "supportedResources": [
      {
        "Name": "delegationset",
        "ARN": "arn:aws:route53:::delegationset/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetTrafficPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "trafficpolicy"
    ],
    "supportedResources": [
      {
        "Name": "trafficpolicy",
        "ARN": "arn:aws:route53:::trafficpolicy/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetTrafficPolicyInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "trafficpolicyinstance"
    ],
    "supportedResources": [
      {
        "Name": "trafficpolicyinstance",
        "ARN": "arn:aws:route53:::trafficpolicyinstance/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetTrafficPolicyInstanceCount",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListCidrBlocks",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cidrcollection"
    ],
    "supportedResources": [
      {
        "Name": "cidrcollection",
        "ARN": "arn:aws:route53:::cidrcollection/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListCidrCollections",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "noResourceARN": "arn:aws:route53:::cidrcollection/*",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListCidrLocations",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "cidrcollection"
    ],
    "supportedResources": [
      {
        "Name": "cidrcollection",
        "ARN": "arn:aws:route53:::cidrcollection/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListGeoLocations",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListHealthChecks",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListHostedZones",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "noResourceARN": "arn:aws:route53::$account:hostedzone/*",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListHostedZonesByName",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "noResourceARN": "arn:aws:route53::$account:hostedzone/*",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListHostedZonesByVPC",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "noResourceARN": "arn:aws:route53::$account:hostedzone/*",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListQueryLoggingConfigs",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListResourceRecordSets",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListReusableDelegationSets",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "noResourceARN": "arn:aws:route53::$account:delegationset/*",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListTagsForResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": false
      },
      {
        "Name": "healthcheck",
        "ARN": "arn:aws:route53:::healthcheck/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListTagsForResources",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": false
      },
      {
        "Name": "healthcheck",
        "ARN": "arn:aws:route53:::healthcheck/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListTrafficPolicies",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListTrafficPolicyInstances",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListTrafficPolicyInstancesByHostedZone",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListTrafficPolicyInstancesByPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "trafficpolicy"
    ],
    "supportedResources": [
      {
        "Name": "trafficpolicy",
        "ARN": "arn:aws:route53:::trafficpolicy/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListTrafficPolicyVersions",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "trafficpolicy"
    ],
    "supportedResources": [
      {
        "Name": "trafficpolicy",
        "ARN": "arn:aws:route53:::trafficpolicy/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListVPCAssociationAuthorizations",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "TestDNSAnswer",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "UpdateHealthCheck",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "healthcheck"
    ],
    "supportedResources": [
      {
        "Name": "healthcheck",
        "ARN": "arn:aws:route53:::healthcheck/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "UpdateHostedZoneComment",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "hostedzone"
    ],
    "supportedResources": [
      {
        "Name": "hostedzone",
        "ARN": "arn:aws:route53:::hostedzone/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "UpdateTrafficPolicyComment",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "trafficpolicy"
    ],
    "supportedResources": [
      {
        "Name": "trafficpolicy",
        "ARN": "arn:aws:route53:::trafficpolicy/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "UpdateTrafficPolicyInstance",
    "evaluated": false,
    "allowed": false,
    "prefix": "route53",
    "service": "Amazon Route 53",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "trafficpolicyinstance"
    ],
    "supportedResources": [
      {
        "Name": "trafficpolicyinstance",
        "ARN": "arn:aws:route53:::trafficpolicyinstance/${Id}",
        "RegEx": "^arn:aws:route53:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  }
]