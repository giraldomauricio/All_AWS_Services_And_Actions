[
  {
    "name": "CreateFHIRDatastore",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "CreateResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteFHIRDatastore",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeFHIRDatastore",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeFHIRExportJob",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeFHIRImportJob",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetCapabilities",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListFHIRDatastores",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListFHIRExportJobs",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListFHIRImportJobs",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListTagsForResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ReadResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "SearchWithGet",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "SearchWithPost",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StartFHIRExportJob",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StartFHIRImportJob",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "TagResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the presence of tag key-value pairs in the request"
      },
      {
        "Name": "aws:ResourceTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag",
        "Description": "Filters access by the presence of tag key-value pairs attached to the resource"
      },
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the presence of tag keys in the request"
      }
    ]
  },
  {
    "name": "UntagResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "ArrayOfString",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the presence of tag keys in the request"
      }
    ]
  },
  {
    "name": "UpdateResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "healthlake",
    "service": "Amazon HealthLake",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "datastore"
    ],
    "supportedResources": [
      {
        "Name": "datastore",
        "ARN": "arn:aws:healthlake:${Region}:${AccountId}:datastore/fhir/${DatastoreId}",
        "RegEx": "^arn:aws:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?/.+?",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  }
]