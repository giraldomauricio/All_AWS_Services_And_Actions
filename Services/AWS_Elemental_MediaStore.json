[
  {
    "name": "CreateContainer",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "DeleteContainer",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteContainerPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteCorsPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteLifecyclePolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteMetricPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DeleteObject",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}/${ObjectPath}",
        "RegEx": "^arn:aws:mediastore:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeContainer",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "DescribeObject",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}/${ObjectPath}",
        "RegEx": "^arn:aws:mediastore:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetContainerPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetCorsPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetLifecyclePolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetMetricPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "GetObject",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}/${ObjectPath}",
        "RegEx": "^arn:aws:mediastore:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListContainers",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "noResourceARN": "*",
    "serviceAware": true,
    "resourceEnabled": false,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "ARN",
        "ARN": "*",
        "ContextKeys": [],
        "ContextKeyStrings": [],
        "isRequired": true,
        "ContextKeysRef": []
      }
    ]
  },
  {
    "name": "ListItems",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "folder",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}/${FolderPath}",
        "RegEx": "^arn:aws:mediastore:.+",
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "ListTagsForResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "PutContainerPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "PutCorsPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "PutLifecyclePolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "PutMetricPolicy",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "PutObject",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "object"
    ],
    "supportedResources": [
      {
        "Name": "object",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}/${ObjectPath}",
        "RegEx": "^arn:aws:mediastore:.+",
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StartAccessLogging",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "StopAccessLogging",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "requiredResourceNames": [
      "container"
    ],
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": true
      }
    ],
    "scenarios": [],
    "contextKeys": []
  },
  {
    "name": "TagResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the tag keys that are passed in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the tags that are passed in the request"
      }
    ]
  },
  {
    "name": "UntagResource",
    "evaluated": false,
    "allowed": false,
    "prefix": "mediastore",
    "service": "AWS Elemental MediaStore",
    "serviceAware": true,
    "resourceEnabled": true,
    "deniedByOrganization": false,
    "supportedResources": [
      {
        "Name": "container",
        "ARN": "arn:aws:mediastore:${Region}:${Account}:container/${ContainerName}",
        "RegEx": "^arn:aws:mediastore:.+",
        "ContextKeys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "ContextKeyStrings": [
          "aws:resourcetag/${tagkey}"
        ],
        "isRequired": false
      }
    ],
    "scenarios": [],
    "contextKeys": [
      {
        "Name": "aws:TagKeys",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys",
        "Description": "Filters access by the tag keys that are passed in the request"
      },
      {
        "Name": "aws:RequestTag/${TagKey}",
        "Type": "String",
        "DocPageRel": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "DocPage": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag",
        "Description": "Filters access by the tags that are passed in the request"
      }
    ]
  }
]